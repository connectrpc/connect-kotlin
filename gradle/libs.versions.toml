[versions]
android = "4.1.1.4"
assertj = "3.24.2"
coroutines = "1.7.3"
dokka = "1.9.10"
junit = "4.13.2"
kotlin = "1.9.20"
kotlinpoet = "1.14.2"
mavenplugin = "0.25.3"
moshi = "1.15.0"
okhttp = "4.12.0"
okio = "3.6.0"
protobuf = "3.25.1"
slf4j = "2.0.9"
spotless = "6.22.0"

[libraries]
android = { module = "com.google.android:android", version.ref = "android" }
android-material = { module = "com.google.android.material:material", version = "1.10.0" }
android-multidex = { module = "com.android.support:multidex", version = "1.0.3" }
android-plugin = { module = "com.android.tools.build:gradle", version = "8.1.3" }
androidx-annotations = { module = "androidx.annotation:annotation", version = "1.7.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidx-compose = { module = "androidx.activity:activity-compose", version = "1.8.0" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version = "2.6.2" }
androidx-ktx = { module = "androidx.core:core-ktx", version = "1.12.0" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", "version" = "1.3.2" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }
dokka-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-jsr223 = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223", version.ref = "kotlin" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
maven-plugin = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "mavenplugin" }
mockito = { module = "org.mockito.kotlin:mockito-kotlin", version = "4.1.0" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshiKotlinCodegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-tls = { module = "com.squareup.okhttp3:okhttp-tls", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
okio-core = { module = "com.squareup.okio:okio", version.ref = "okio" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf" }
protobuf-javalite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-kotlinlite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
testcontainers = { module = "org.testcontainers:testcontainers", version = "1.19.1" }

[plugins]
git = { id = "com.palantir.git-version", version = "3.0.0" }
ksp = { id = "com.google.devtools.ksp", version = "1.9.20-1.0.14" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
