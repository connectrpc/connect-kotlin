// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: grpc/testing/test.proto
//
package grpc.testing

import build.buf.connect.Headers
import build.buf.connect.ResponseMessage
import build.buf.connect.http.Cancelable
import kotlin.Unit

/**
 *  A service used to obtain stats for verifying LB behavior.
 */
public interface LoadBalancerStatsServiceClientInterface {
  /**
   *  Gets the backend distribution for RPCs sent by a test client.
   */
  public suspend fun getClientStats(request: Messages.LoadBalancerStatsRequest, headers: Headers =
      emptyMap()): ResponseMessage<Messages.LoadBalancerStatsResponse>

  /**
   *  Gets the backend distribution for RPCs sent by a test client.
   */
  public fun getClientStats(
    request: Messages.LoadBalancerStatsRequest,
    headers: Headers = emptyMap(),
    onResult: (ResponseMessage<Messages.LoadBalancerStatsResponse>) -> Unit,
  ): Cancelable

  /**
   *  Gets the accumulated stats for RPCs sent by a test client.
   */
  public suspend
      fun getClientAccumulatedStats(request: Messages.LoadBalancerAccumulatedStatsRequest,
      headers: Headers = emptyMap()): ResponseMessage<Messages.LoadBalancerAccumulatedStatsResponse>

  /**
   *  Gets the accumulated stats for RPCs sent by a test client.
   */
  public fun getClientAccumulatedStats(
    request: Messages.LoadBalancerAccumulatedStatsRequest,
    headers: Headers = emptyMap(),
    onResult: (ResponseMessage<Messages.LoadBalancerAccumulatedStatsResponse>) -> Unit,
  ): Cancelable
}
