// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

/**
 * <pre>
 * Server-streaming request.
 * </pre>
 *
 * Protobuf type {@code grpc.testing.StreamingOutputCallRequest}
 */
public  final class StreamingOutputCallRequest extends
    com.google.protobuf.GeneratedMessageLite<
        StreamingOutputCallRequest, StreamingOutputCallRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:grpc.testing.StreamingOutputCallRequest)
    StreamingOutputCallRequestOrBuilder {
  private StreamingOutputCallRequest() {
    responseParameters_ = emptyProtobufList();
  }
  public static final int RESPONSE_TYPE_FIELD_NUMBER = 1;
  private int responseType_;
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, the payload from each response in the stream
   * might be of different types. This is to simulate a mixed type of payload
   * stream.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   * @return The enum numeric value on the wire for responseType.
   */
  @java.lang.Override
  public int getResponseTypeValue() {
    return responseType_;
  }
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, the payload from each response in the stream
   * might be of different types. This is to simulate a mixed type of payload
   * stream.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   * @return The responseType.
   */
  @java.lang.Override
  public com.grpc.testing.PayloadType getResponseType() {
    com.grpc.testing.PayloadType result = com.grpc.testing.PayloadType.forNumber(responseType_);
    return result == null ? com.grpc.testing.PayloadType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, the payload from each response in the stream
   * might be of different types. This is to simulate a mixed type of payload
   * stream.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   * @param value The enum numeric value on the wire for responseType to set.
   */
  private void setResponseTypeValue(int value) {
      responseType_ = value;
  }
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, the payload from each response in the stream
   * might be of different types. This is to simulate a mixed type of payload
   * stream.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   * @param value The responseType to set.
   */
  private void setResponseType(com.grpc.testing.PayloadType value) {
    responseType_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, the payload from each response in the stream
   * might be of different types. This is to simulate a mixed type of payload
   * stream.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   */
  private void clearResponseType() {
    
    responseType_ = 0;
  }

  public static final int RESPONSE_PARAMETERS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.grpc.testing.ResponseParameters> responseParameters_;
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  @java.lang.Override
  public java.util.List<com.grpc.testing.ResponseParameters> getResponseParametersList() {
    return responseParameters_;
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  public java.util.List<? extends com.grpc.testing.ResponseParametersOrBuilder> 
      getResponseParametersOrBuilderList() {
    return responseParameters_;
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  @java.lang.Override
  public int getResponseParametersCount() {
    return responseParameters_.size();
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.ResponseParameters getResponseParameters(int index) {
    return responseParameters_.get(index);
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  public com.grpc.testing.ResponseParametersOrBuilder getResponseParametersOrBuilder(
      int index) {
    return responseParameters_.get(index);
  }
  private void ensureResponseParametersIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.grpc.testing.ResponseParameters> tmp = responseParameters_;
    if (!tmp.isModifiable()) {
      responseParameters_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  private void setResponseParameters(
      int index, com.grpc.testing.ResponseParameters value) {
    value.getClass();
  ensureResponseParametersIsMutable();
    responseParameters_.set(index, value);
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  private void addResponseParameters(com.grpc.testing.ResponseParameters value) {
    value.getClass();
  ensureResponseParametersIsMutable();
    responseParameters_.add(value);
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  private void addResponseParameters(
      int index, com.grpc.testing.ResponseParameters value) {
    value.getClass();
  ensureResponseParametersIsMutable();
    responseParameters_.add(index, value);
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  private void addAllResponseParameters(
      java.lang.Iterable<? extends com.grpc.testing.ResponseParameters> values) {
    ensureResponseParametersIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, responseParameters_);
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  private void clearResponseParameters() {
    responseParameters_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Configuration for each expected response message.
   * </pre>
   *
   * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
   */
  private void removeResponseParameters(int index) {
    ensureResponseParametersIsMutable();
    responseParameters_.remove(index);
  }

  public static final int PAYLOAD_FIELD_NUMBER = 3;
  private com.grpc.testing.Payload payload_;
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   */
  @java.lang.Override
  public boolean hasPayload() {
    return payload_ != null;
  }
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.Payload getPayload() {
    return payload_ == null ? com.grpc.testing.Payload.getDefaultInstance() : payload_;
  }
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   */
  private void setPayload(com.grpc.testing.Payload value) {
    value.getClass();
  payload_ = value;
    
    }
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePayload(com.grpc.testing.Payload value) {
    value.getClass();
  if (payload_ != null &&
        payload_ != com.grpc.testing.Payload.getDefaultInstance()) {
      payload_ =
        com.grpc.testing.Payload.newBuilder(payload_).mergeFrom(value).buildPartial();
    } else {
      payload_ = value;
    }
    
  }
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   */
  private void clearPayload() {  payload_ = null;
    
  }

  public static final int RESPONSE_STATUS_FIELD_NUMBER = 7;
  private com.grpc.testing.EchoStatus responseStatus_;
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   */
  @java.lang.Override
  public boolean hasResponseStatus() {
    return responseStatus_ != null;
  }
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.EchoStatus getResponseStatus() {
    return responseStatus_ == null ? com.grpc.testing.EchoStatus.getDefaultInstance() : responseStatus_;
  }
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   */
  private void setResponseStatus(com.grpc.testing.EchoStatus value) {
    value.getClass();
  responseStatus_ = value;
    
    }
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeResponseStatus(com.grpc.testing.EchoStatus value) {
    value.getClass();
  if (responseStatus_ != null &&
        responseStatus_ != com.grpc.testing.EchoStatus.getDefaultInstance()) {
      responseStatus_ =
        com.grpc.testing.EchoStatus.newBuilder(responseStatus_).mergeFrom(value).buildPartial();
    } else {
      responseStatus_ = value;
    }
    
  }
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   */
  private void clearResponseStatus() {  responseStatus_ = null;
    
  }

  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.StreamingOutputCallRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.grpc.testing.StreamingOutputCallRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Server-streaming request.
   * </pre>
   *
   * Protobuf type {@code grpc.testing.StreamingOutputCallRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.grpc.testing.StreamingOutputCallRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.StreamingOutputCallRequest)
      com.grpc.testing.StreamingOutputCallRequestOrBuilder {
    // Construct using com.grpc.testing.StreamingOutputCallRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @return The enum numeric value on the wire for responseType.
     */
    @java.lang.Override
    public int getResponseTypeValue() {
      return instance.getResponseTypeValue();
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @param value The responseType to set.
     * @return This builder for chaining.
     */
    public Builder setResponseTypeValue(int value) {
      copyOnWrite();
      instance.setResponseTypeValue(value);
      return this;
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @return The responseType.
     */
    @java.lang.Override
    public com.grpc.testing.PayloadType getResponseType() {
      return instance.getResponseType();
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @param value The enum numeric value on the wire for responseType to set.
     * @return This builder for chaining.
     */
    public Builder setResponseType(com.grpc.testing.PayloadType value) {
      copyOnWrite();
      instance.setResponseType(value);
      return this;
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearResponseType() {
      copyOnWrite();
      instance.clearResponseType();
      return this;
    }

    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    @java.lang.Override
    public java.util.List<com.grpc.testing.ResponseParameters> getResponseParametersList() {
      return java.util.Collections.unmodifiableList(
          instance.getResponseParametersList());
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    @java.lang.Override
    public int getResponseParametersCount() {
      return instance.getResponseParametersCount();
    }/**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    @java.lang.Override
    public com.grpc.testing.ResponseParameters getResponseParameters(int index) {
      return instance.getResponseParameters(index);
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder setResponseParameters(
        int index, com.grpc.testing.ResponseParameters value) {
      copyOnWrite();
      instance.setResponseParameters(index, value);
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder setResponseParameters(
        int index, com.grpc.testing.ResponseParameters.Builder builderForValue) {
      copyOnWrite();
      instance.setResponseParameters(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder addResponseParameters(com.grpc.testing.ResponseParameters value) {
      copyOnWrite();
      instance.addResponseParameters(value);
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder addResponseParameters(
        int index, com.grpc.testing.ResponseParameters value) {
      copyOnWrite();
      instance.addResponseParameters(index, value);
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder addResponseParameters(
        com.grpc.testing.ResponseParameters.Builder builderForValue) {
      copyOnWrite();
      instance.addResponseParameters(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder addResponseParameters(
        int index, com.grpc.testing.ResponseParameters.Builder builderForValue) {
      copyOnWrite();
      instance.addResponseParameters(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder addAllResponseParameters(
        java.lang.Iterable<? extends com.grpc.testing.ResponseParameters> values) {
      copyOnWrite();
      instance.addAllResponseParameters(values);
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder clearResponseParameters() {
      copyOnWrite();
      instance.clearResponseParameters();
      return this;
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    public Builder removeResponseParameters(int index) {
      copyOnWrite();
      instance.removeResponseParameters(index);
      return this;
    }

    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    @java.lang.Override
    public boolean hasPayload() {
      return instance.hasPayload();
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    @java.lang.Override
    public com.grpc.testing.Payload getPayload() {
      return instance.getPayload();
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder setPayload(com.grpc.testing.Payload value) {
      copyOnWrite();
      instance.setPayload(value);
      return this;
      }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder setPayload(
        com.grpc.testing.Payload.Builder builderForValue) {
      copyOnWrite();
      instance.setPayload(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder mergePayload(com.grpc.testing.Payload value) {
      copyOnWrite();
      instance.mergePayload(value);
      return this;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder clearPayload() {  copyOnWrite();
      instance.clearPayload();
      return this;
    }

    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    @java.lang.Override
    public boolean hasResponseStatus() {
      return instance.hasResponseStatus();
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    @java.lang.Override
    public com.grpc.testing.EchoStatus getResponseStatus() {
      return instance.getResponseStatus();
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder setResponseStatus(com.grpc.testing.EchoStatus value) {
      copyOnWrite();
      instance.setResponseStatus(value);
      return this;
      }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder setResponseStatus(
        com.grpc.testing.EchoStatus.Builder builderForValue) {
      copyOnWrite();
      instance.setResponseStatus(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder mergeResponseStatus(com.grpc.testing.EchoStatus value) {
      copyOnWrite();
      instance.mergeResponseStatus(value);
      return this;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder clearResponseStatus() {  copyOnWrite();
      instance.clearResponseStatus();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:grpc.testing.StreamingOutputCallRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.grpc.testing.StreamingOutputCallRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "responseType_",
            "responseParameters_",
            com.grpc.testing.ResponseParameters.class,
            "payload_",
            "responseStatus_",
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0007\u0004\u0000\u0001\u0000\u0001\f\u0002\u001b" +
              "\u0003\t\u0007\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.grpc.testing.StreamingOutputCallRequest> parser = PARSER;
        if (parser == null) {
          synchronized (com.grpc.testing.StreamingOutputCallRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.grpc.testing.StreamingOutputCallRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:grpc.testing.StreamingOutputCallRequest)
  private static final com.grpc.testing.StreamingOutputCallRequest DEFAULT_INSTANCE;
  static {
    StreamingOutputCallRequest defaultInstance = new StreamingOutputCallRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      StreamingOutputCallRequest.class, defaultInstance);
  }

  public static com.grpc.testing.StreamingOutputCallRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<StreamingOutputCallRequest> PARSER;

  public static com.google.protobuf.Parser<StreamingOutputCallRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

