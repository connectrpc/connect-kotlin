// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

/**
 * <pre>
 * Accumulated stats for RPCs sent by a test client.
 * </pre>
 *
 * Protobuf type {@code grpc.testing.LoadBalancerAccumulatedStatsResponse}
 */
public  final class LoadBalancerAccumulatedStatsResponse extends
    com.google.protobuf.GeneratedMessageLite<
        LoadBalancerAccumulatedStatsResponse, LoadBalancerAccumulatedStatsResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:grpc.testing.LoadBalancerAccumulatedStatsResponse)
    LoadBalancerAccumulatedStatsResponseOrBuilder {
  private LoadBalancerAccumulatedStatsResponse() {
  }
  public interface MethodStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The number of RPCs that were started for this method.
     * </pre>
     *
     * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
     * @return The rpcsStarted.
     */
    int getRpcsStarted();

    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    int getResultCount();
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    boolean containsResult(
        int key);
    /**
     * Use {@link #getResultMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getResult();
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getResultMap();
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */

    int getResultOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */

    int getResultOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats}
   */
  public  static final class MethodStats extends
      com.google.protobuf.GeneratedMessageLite<
          MethodStats, MethodStats.Builder> implements
      // @@protoc_insertion_point(message_implements:grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats)
      MethodStatsOrBuilder {
    private MethodStats() {
    }
    public static final int RPCS_STARTED_FIELD_NUMBER = 1;
    private int rpcsStarted_;
    /**
     * <pre>
     * The number of RPCs that were started for this method.
     * </pre>
     *
     * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
     * @return The rpcsStarted.
     */
    @java.lang.Override
    public int getRpcsStarted() {
      return rpcsStarted_;
    }
    /**
     * <pre>
     * The number of RPCs that were started for this method.
     * </pre>
     *
     * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
     * @param value The rpcsStarted to set.
     */
    private void setRpcsStarted(int value) {
      
      rpcsStarted_ = value;
    }
    /**
     * <pre>
     * The number of RPCs that were started for this method.
     * </pre>
     *
     * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
     */
    private void clearRpcsStarted() {
      
      rpcsStarted_ = 0;
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private static final class ResultDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, java.lang.Integer> result_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
    internalGetResult() {
      return result_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
    internalGetMutableResult() {
      if (!result_.isMutable()) {
        result_ = result_.mutableCopy();
      }
      return result_;
    }
    @java.lang.Override

    public int getResultCount() {
      return internalGetResult().size();
    }
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    @java.lang.Override

    public boolean containsResult(
        int key) {
      
      return internalGetResult().containsKey(key);
    }
    /**
     * Use {@link #getResultMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getResult() {
      return getResultMap();
    }
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getResultMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetResult());
    }
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    @java.lang.Override

    public int getResultOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetResult();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    @java.lang.Override

    public int getResultOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetResult();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The number of RPCs that completed with each status for this method.  The
     * key is the integral value of a google.rpc.Code; the value is the count.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
     */
    private java.util.Map<java.lang.Integer, java.lang.Integer>
    getMutableResultMap() {
      return internalGetMutableResult();
    }

    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats, Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats)
        com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStatsOrBuilder {
      // Construct using com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The number of RPCs that were started for this method.
       * </pre>
       *
       * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
       * @return The rpcsStarted.
       */
      @java.lang.Override
      public int getRpcsStarted() {
        return instance.getRpcsStarted();
      }
      /**
       * <pre>
       * The number of RPCs that were started for this method.
       * </pre>
       *
       * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
       * @param value The rpcsStarted to set.
       * @return This builder for chaining.
       */
      public Builder setRpcsStarted(int value) {
        copyOnWrite();
        instance.setRpcsStarted(value);
        return this;
      }
      /**
       * <pre>
       * The number of RPCs that were started for this method.
       * </pre>
       *
       * <code>int32 rpcs_started = 1 [json_name = "rpcsStarted"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRpcsStarted() {
        copyOnWrite();
        instance.clearRpcsStarted();
        return this;
      }

      @java.lang.Override

      public int getResultCount() {
        return instance.getResultMap().size();
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */
      @java.lang.Override

      public boolean containsResult(
          int key) {
        
        return instance.getResultMap().containsKey(key);
      }

      public Builder clearResult() {
        copyOnWrite();
        instance.getMutableResultMap().clear();
        return this;
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */

      public Builder removeResult(
          int key) {
        
        copyOnWrite();
        instance.getMutableResultMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getResultMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getResult() {
        return getResultMap();
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getResultMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getResultMap());
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */
      @java.lang.Override

      public int getResultOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            instance.getResultMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */
      @java.lang.Override

      public int getResultOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            instance.getResultMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */
      public Builder putResult(
          int key,
          int value) {
        
        
        copyOnWrite();
        instance.getMutableResultMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * The number of RPCs that completed with each status for this method.  The
       * key is the integral value of a google.rpc.Code; the value is the count.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; result = 2 [json_name = "result"];</code>
       */
      public Builder putAllResult(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutableResultMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "rpcsStarted_",
              "result_",
              ResultDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0001\u0000\u0000\u0001\u0004\u00022";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> parser = PARSER;
          if (parser == null) {
            synchronized (com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats)
    private static final com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats DEFAULT_INSTANCE;
    static {
      MethodStats defaultInstance = new MethodStats();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MethodStats.class, defaultInstance);
    }

    public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MethodStats> PARSER;

    public static com.google.protobuf.Parser<MethodStats> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int NUM_RPCS_STARTED_BY_METHOD_FIELD_NUMBER = 1;
  private static final class NumRpcsStartedByMethodDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.Integer> numRpcsStartedByMethod_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetNumRpcsStartedByMethod() {
    return numRpcsStartedByMethod_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetMutableNumRpcsStartedByMethod() {
    if (!numRpcsStartedByMethod_.isMutable()) {
      numRpcsStartedByMethod_ = numRpcsStartedByMethod_.mutableCopy();
    }
    return numRpcsStartedByMethod_;
  }
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsStartedByMethodCount() {
    return internalGetNumRpcsStartedByMethod().size();
  }
  /**
   * <pre>
   * The total number of RPCs have ever issued for each type.
   * Deprecated: use stats_per_method.rpcs_started instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public boolean containsNumRpcsStartedByMethod(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetNumRpcsStartedByMethod().containsKey(key);
  }
  /**
   * Use {@link #getNumRpcsStartedByMethodMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsStartedByMethod() {
    return getNumRpcsStartedByMethodMap();
  }
  /**
   * <pre>
   * The total number of RPCs have ever issued for each type.
   * Deprecated: use stats_per_method.rpcs_started instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsStartedByMethodMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetNumRpcsStartedByMethod());
  }
  /**
   * <pre>
   * The total number of RPCs have ever issued for each type.
   * Deprecated: use stats_per_method.rpcs_started instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsStartedByMethodOrDefault(
      java.lang.String key,
      int defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetNumRpcsStartedByMethod();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The total number of RPCs have ever issued for each type.
   * Deprecated: use stats_per_method.rpcs_started instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsStartedByMethodOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetNumRpcsStartedByMethod();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The total number of RPCs have ever issued for each type.
   * Deprecated: use stats_per_method.rpcs_started instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
   */
  private java.util.Map<java.lang.String, java.lang.Integer>
  getMutableNumRpcsStartedByMethodMap() {
    return internalGetMutableNumRpcsStartedByMethod();
  }

  public static final int NUM_RPCS_SUCCEEDED_BY_METHOD_FIELD_NUMBER = 2;
  private static final class NumRpcsSucceededByMethodDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.Integer> numRpcsSucceededByMethod_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetNumRpcsSucceededByMethod() {
    return numRpcsSucceededByMethod_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetMutableNumRpcsSucceededByMethod() {
    if (!numRpcsSucceededByMethod_.isMutable()) {
      numRpcsSucceededByMethod_ = numRpcsSucceededByMethod_.mutableCopy();
    }
    return numRpcsSucceededByMethod_;
  }
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsSucceededByMethodCount() {
    return internalGetNumRpcsSucceededByMethod().size();
  }
  /**
   * <pre>
   * The total number of RPCs have ever completed successfully for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public boolean containsNumRpcsSucceededByMethod(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetNumRpcsSucceededByMethod().containsKey(key);
  }
  /**
   * Use {@link #getNumRpcsSucceededByMethodMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsSucceededByMethod() {
    return getNumRpcsSucceededByMethodMap();
  }
  /**
   * <pre>
   * The total number of RPCs have ever completed successfully for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsSucceededByMethodMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetNumRpcsSucceededByMethod());
  }
  /**
   * <pre>
   * The total number of RPCs have ever completed successfully for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsSucceededByMethodOrDefault(
      java.lang.String key,
      int defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetNumRpcsSucceededByMethod();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The total number of RPCs have ever completed successfully for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsSucceededByMethodOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetNumRpcsSucceededByMethod();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The total number of RPCs have ever completed successfully for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
   */
  private java.util.Map<java.lang.String, java.lang.Integer>
  getMutableNumRpcsSucceededByMethodMap() {
    return internalGetMutableNumRpcsSucceededByMethod();
  }

  public static final int NUM_RPCS_FAILED_BY_METHOD_FIELD_NUMBER = 3;
  private static final class NumRpcsFailedByMethodDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.Integer> numRpcsFailedByMethod_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetNumRpcsFailedByMethod() {
    return numRpcsFailedByMethod_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetMutableNumRpcsFailedByMethod() {
    if (!numRpcsFailedByMethod_.isMutable()) {
      numRpcsFailedByMethod_ = numRpcsFailedByMethod_.mutableCopy();
    }
    return numRpcsFailedByMethod_;
  }
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsFailedByMethodCount() {
    return internalGetNumRpcsFailedByMethod().size();
  }
  /**
   * <pre>
   * The total number of RPCs have ever failed for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public boolean containsNumRpcsFailedByMethod(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetNumRpcsFailedByMethod().containsKey(key);
  }
  /**
   * Use {@link #getNumRpcsFailedByMethodMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsFailedByMethod() {
    return getNumRpcsFailedByMethodMap();
  }
  /**
   * <pre>
   * The total number of RPCs have ever failed for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsFailedByMethodMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetNumRpcsFailedByMethod());
  }
  /**
   * <pre>
   * The total number of RPCs have ever failed for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsFailedByMethodOrDefault(
      java.lang.String key,
      int defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetNumRpcsFailedByMethod();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The total number of RPCs have ever failed for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated 
  public int getNumRpcsFailedByMethodOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetNumRpcsFailedByMethod();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The total number of RPCs have ever failed for each type.
   * Deprecated: use stats_per_method.result instead.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
   */
  private java.util.Map<java.lang.String, java.lang.Integer>
  getMutableNumRpcsFailedByMethodMap() {
    return internalGetMutableNumRpcsFailedByMethod();
  }

  public static final int STATS_PER_METHOD_FIELD_NUMBER = 4;
  private static final class StatsPerMethodDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> statsPerMethod_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats>
  internalGetStatsPerMethod() {
    return statsPerMethod_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats>
  internalGetMutableStatsPerMethod() {
    if (!statsPerMethod_.isMutable()) {
      statsPerMethod_ = statsPerMethod_.mutableCopy();
    }
    return statsPerMethod_;
  }
  @java.lang.Override

  public int getStatsPerMethodCount() {
    return internalGetStatsPerMethod().size();
  }
  /**
   * <pre>
   * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
   * 'EMPTY_CALL' or 'UNARY_CALL'
   * </pre>
   *
   * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
   */
  @java.lang.Override

  public boolean containsStatsPerMethod(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetStatsPerMethod().containsKey(key);
  }
  /**
   * Use {@link #getStatsPerMethodMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> getStatsPerMethod() {
    return getStatsPerMethodMap();
  }
  /**
   * <pre>
   * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
   * 'EMPTY_CALL' or 'UNARY_CALL'
   * </pre>
   *
   * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> getStatsPerMethodMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetStatsPerMethod());
  }
  /**
   * <pre>
   * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
   * 'EMPTY_CALL' or 'UNARY_CALL'
   * </pre>
   *
   * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
   */
  @java.lang.Override

  public com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats getStatsPerMethodOrDefault(
      java.lang.String key,
      com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> map =
        internalGetStatsPerMethod();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
   * 'EMPTY_CALL' or 'UNARY_CALL'
   * </pre>
   *
   * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
   */
  @java.lang.Override

  public com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats getStatsPerMethodOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> map =
        internalGetStatsPerMethod();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
   * 'EMPTY_CALL' or 'UNARY_CALL'
   * </pre>
   *
   * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
   */
  private java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats>
  getMutableStatsPerMethodMap() {
    return internalGetMutableStatsPerMethod();
  }

  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.grpc.testing.LoadBalancerAccumulatedStatsResponse prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Accumulated stats for RPCs sent by a test client.
   * </pre>
   *
   * Protobuf type {@code grpc.testing.LoadBalancerAccumulatedStatsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.grpc.testing.LoadBalancerAccumulatedStatsResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.LoadBalancerAccumulatedStatsResponse)
      com.grpc.testing.LoadBalancerAccumulatedStatsResponseOrBuilder {
    // Construct using com.grpc.testing.LoadBalancerAccumulatedStatsResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsStartedByMethodCount() {
      return instance.getNumRpcsStartedByMethodMap().size();
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public boolean containsNumRpcsStartedByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getNumRpcsStartedByMethodMap().containsKey(key);
    }
    @java.lang.Deprecated 
    public Builder clearNumRpcsStartedByMethod() {
      copyOnWrite();
      instance.getMutableNumRpcsStartedByMethodMap().clear();
      return this;
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated 
    public Builder removeNumRpcsStartedByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableNumRpcsStartedByMethodMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getNumRpcsStartedByMethodMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsStartedByMethod() {
      return getNumRpcsStartedByMethodMap();
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsStartedByMethodMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getNumRpcsStartedByMethodMap());
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsStartedByMethodOrDefault(
        java.lang.String key,
        int defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getNumRpcsStartedByMethodMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsStartedByMethodOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getNumRpcsStartedByMethodMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder putNumRpcsStartedByMethod(
        java.lang.String key,
        int value) {
      java.lang.Class<?> keyClass = key.getClass();
      
      copyOnWrite();
      instance.getMutableNumRpcsStartedByMethodMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The total number of RPCs have ever issued for each type.
     * Deprecated: use stats_per_method.rpcs_started instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_started_by_method = 1 [json_name = "numRpcsStartedByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder putAllNumRpcsStartedByMethod(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      copyOnWrite();
      instance.getMutableNumRpcsStartedByMethodMap().putAll(values);
      return this;
    }

    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsSucceededByMethodCount() {
      return instance.getNumRpcsSucceededByMethodMap().size();
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public boolean containsNumRpcsSucceededByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getNumRpcsSucceededByMethodMap().containsKey(key);
    }
    @java.lang.Deprecated 
    public Builder clearNumRpcsSucceededByMethod() {
      copyOnWrite();
      instance.getMutableNumRpcsSucceededByMethodMap().clear();
      return this;
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated 
    public Builder removeNumRpcsSucceededByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableNumRpcsSucceededByMethodMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getNumRpcsSucceededByMethodMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsSucceededByMethod() {
      return getNumRpcsSucceededByMethodMap();
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsSucceededByMethodMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getNumRpcsSucceededByMethodMap());
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsSucceededByMethodOrDefault(
        java.lang.String key,
        int defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getNumRpcsSucceededByMethodMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsSucceededByMethodOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getNumRpcsSucceededByMethodMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder putNumRpcsSucceededByMethod(
        java.lang.String key,
        int value) {
      java.lang.Class<?> keyClass = key.getClass();
      
      copyOnWrite();
      instance.getMutableNumRpcsSucceededByMethodMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The total number of RPCs have ever completed successfully for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_succeeded_by_method = 2 [json_name = "numRpcsSucceededByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder putAllNumRpcsSucceededByMethod(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      copyOnWrite();
      instance.getMutableNumRpcsSucceededByMethodMap().putAll(values);
      return this;
    }

    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsFailedByMethodCount() {
      return instance.getNumRpcsFailedByMethodMap().size();
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public boolean containsNumRpcsFailedByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getNumRpcsFailedByMethodMap().containsKey(key);
    }
    @java.lang.Deprecated 
    public Builder clearNumRpcsFailedByMethod() {
      copyOnWrite();
      instance.getMutableNumRpcsFailedByMethodMap().clear();
      return this;
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated 
    public Builder removeNumRpcsFailedByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableNumRpcsFailedByMethodMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getNumRpcsFailedByMethodMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsFailedByMethod() {
      return getNumRpcsFailedByMethodMap();
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public java.util.Map<java.lang.String, java.lang.Integer> getNumRpcsFailedByMethodMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getNumRpcsFailedByMethodMap());
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsFailedByMethodOrDefault(
        java.lang.String key,
        int defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getNumRpcsFailedByMethodMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated 
    public int getNumRpcsFailedByMethodOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getNumRpcsFailedByMethodMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder putNumRpcsFailedByMethod(
        java.lang.String key,
        int value) {
      java.lang.Class<?> keyClass = key.getClass();
      
      copyOnWrite();
      instance.getMutableNumRpcsFailedByMethodMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The total number of RPCs have ever failed for each type.
     * Deprecated: use stats_per_method.result instead.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_rpcs_failed_by_method = 3 [json_name = "numRpcsFailedByMethod", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder putAllNumRpcsFailedByMethod(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      copyOnWrite();
      instance.getMutableNumRpcsFailedByMethodMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getStatsPerMethodCount() {
      return instance.getStatsPerMethodMap().size();
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */
    @java.lang.Override

    public boolean containsStatsPerMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getStatsPerMethodMap().containsKey(key);
    }

    public Builder clearStatsPerMethod() {
      copyOnWrite();
      instance.getMutableStatsPerMethodMap().clear();
      return this;
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */

    public Builder removeStatsPerMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableStatsPerMethodMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getStatsPerMethodMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> getStatsPerMethod() {
      return getStatsPerMethodMap();
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> getStatsPerMethodMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getStatsPerMethodMap());
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */
    @java.lang.Override

    public com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats getStatsPerMethodOrDefault(
        java.lang.String key,
        com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> map =
          instance.getStatsPerMethodMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */
    @java.lang.Override

    public com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats getStatsPerMethodOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> map =
          instance.getStatsPerMethodMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */
    public Builder putStatsPerMethod(
        java.lang.String key,
        com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableStatsPerMethodMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Per-method RPC statistics.  The key is the RpcType in string form; e.g.
     * 'EMPTY_CALL' or 'UNARY_CALL'
     * </pre>
     *
     * <code>map&lt;string, .grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats&gt; stats_per_method = 4 [json_name = "statsPerMethod"];</code>
     */
    public Builder putAllStatsPerMethod(
        java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerAccumulatedStatsResponse.MethodStats> values) {
      copyOnWrite();
      instance.getMutableStatsPerMethodMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:grpc.testing.LoadBalancerAccumulatedStatsResponse)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.grpc.testing.LoadBalancerAccumulatedStatsResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "numRpcsStartedByMethod_",
            NumRpcsStartedByMethodDefaultEntryHolder.defaultEntry,
            "numRpcsSucceededByMethod_",
            NumRpcsSucceededByMethodDefaultEntryHolder.defaultEntry,
            "numRpcsFailedByMethod_",
            NumRpcsFailedByMethodDefaultEntryHolder.defaultEntry,
            "statsPerMethod_",
            StatsPerMethodDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0004\u0000\u0000\u00012\u00022\u0003" +
              "2\u00042";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.grpc.testing.LoadBalancerAccumulatedStatsResponse> parser = PARSER;
        if (parser == null) {
          synchronized (com.grpc.testing.LoadBalancerAccumulatedStatsResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.grpc.testing.LoadBalancerAccumulatedStatsResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:grpc.testing.LoadBalancerAccumulatedStatsResponse)
  private static final com.grpc.testing.LoadBalancerAccumulatedStatsResponse DEFAULT_INSTANCE;
  static {
    LoadBalancerAccumulatedStatsResponse defaultInstance = new LoadBalancerAccumulatedStatsResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      LoadBalancerAccumulatedStatsResponse.class, defaultInstance);
  }

  public static com.grpc.testing.LoadBalancerAccumulatedStatsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<LoadBalancerAccumulatedStatsResponse> PARSER;

  public static com.google.protobuf.Parser<LoadBalancerAccumulatedStatsResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

