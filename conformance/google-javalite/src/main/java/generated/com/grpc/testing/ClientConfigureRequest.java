// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

/**
 * <pre>
 * Configurations for a test client.
 * </pre>
 *
 * Protobuf type {@code grpc.testing.ClientConfigureRequest}
 */
public  final class ClientConfigureRequest extends
    com.google.protobuf.GeneratedMessageLite<
        ClientConfigureRequest, ClientConfigureRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:grpc.testing.ClientConfigureRequest)
    ClientConfigureRequestOrBuilder {
  private ClientConfigureRequest() {
    types_ = emptyIntList();
    metadata_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Type of RPCs to send.
   * </pre>
   *
   * Protobuf enum {@code grpc.testing.ClientConfigureRequest.RpcType}
   */
  public enum RpcType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>EMPTY_CALL = 0;</code>
     */
    EMPTY_CALL(0),
    /**
     * <code>UNARY_CALL = 1;</code>
     */
    UNARY_CALL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EMPTY_CALL = 0;</code>
     */
    public static final int EMPTY_CALL_VALUE = 0;
    /**
     * <code>UNARY_CALL = 1;</code>
     */
    public static final int UNARY_CALL_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RpcType valueOf(int value) {
      return forNumber(value);
    }

    public static RpcType forNumber(int value) {
      switch (value) {
        case 0: return EMPTY_CALL;
        case 1: return UNARY_CALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RpcType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RpcType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RpcType>() {
            @java.lang.Override
            public RpcType findValueByNumber(int number) {
              return RpcType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return RpcTypeVerifier.INSTANCE;
    }

    private static final class RpcTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new RpcTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return RpcType.forNumber(number) != null;
            }
          };

    private final int value;

    private RpcType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:grpc.testing.ClientConfigureRequest.RpcType)
  }

  public interface MetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.testing.ClientConfigureRequest.Metadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     * @return The type.
     */
    com.grpc.testing.ClientConfigureRequest.RpcType getType();

    /**
     * <code>string key = 2 [json_name = "key"];</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 2 [json_name = "key"];</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 3 [json_name = "value"];</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 3 [json_name = "value"];</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * <pre>
   * Metadata to be attached for the given type of RPCs.
   * </pre>
   *
   * Protobuf type {@code grpc.testing.ClientConfigureRequest.Metadata}
   */
  public  static final class Metadata extends
      com.google.protobuf.GeneratedMessageLite<
          Metadata, Metadata.Builder> implements
      // @@protoc_insertion_point(message_implements:grpc.testing.ClientConfigureRequest.Metadata)
      MetadataOrBuilder {
    private Metadata() {
      key_ = "";
      value_ = "";
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public com.grpc.testing.ClientConfigureRequest.RpcType getType() {
      com.grpc.testing.ClientConfigureRequest.RpcType result = com.grpc.testing.ClientConfigureRequest.RpcType.forNumber(type_);
      return result == null ? com.grpc.testing.ClientConfigureRequest.RpcType.UNRECOGNIZED : result;
    }
    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     * @param value The type to set.
     */
    private void setType(com.grpc.testing.ClientConfigureRequest.RpcType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.String key_;
    /**
     * <code>string key = 2 [json_name = "key"];</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      return key_;
    }
    /**
     * <code>string key = 2 [json_name = "key"];</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(key_);
    }
    /**
     * <code>string key = 2 [json_name = "key"];</code>
     * @param value The key to set.
     */
    private void setKey(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      key_ = value;
    }
    /**
     * <code>string key = 2 [json_name = "key"];</code>
     */
    private void clearKey() {
      
      key_ = getDefaultInstance().getKey();
    }
    /**
     * <code>string key = 2 [json_name = "key"];</code>
     * @param value The bytes for key to set.
     */
    private void setKeyBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      key_ = value.toStringUtf8();
      
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private java.lang.String value_;
    /**
     * <code>string value = 3 [json_name = "value"];</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      return value_;
    }
    /**
     * <code>string value = 3 [json_name = "value"];</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(value_);
    }
    /**
     * <code>string value = 3 [json_name = "value"];</code>
     * @param value The value to set.
     */
    private void setValue(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      value_ = value;
    }
    /**
     * <code>string value = 3 [json_name = "value"];</code>
     */
    private void clearValue() {
      
      value_ = getDefaultInstance().getValue();
    }
    /**
     * <code>string value = 3 [json_name = "value"];</code>
     * @param value The bytes for value to set.
     */
    private void setValueBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      value_ = value.toStringUtf8();
      
    }

    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.ClientConfigureRequest.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.grpc.testing.ClientConfigureRequest.Metadata prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Metadata to be attached for the given type of RPCs.
     * </pre>
     *
     * Protobuf type {@code grpc.testing.ClientConfigureRequest.Metadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.grpc.testing.ClientConfigureRequest.Metadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.testing.ClientConfigureRequest.Metadata)
        com.grpc.testing.ClientConfigureRequest.MetadataOrBuilder {
      // Construct using com.grpc.testing.ClientConfigureRequest.Metadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       * @return The type.
       */
      @java.lang.Override
      public com.grpc.testing.ClientConfigureRequest.RpcType getType() {
        return instance.getType();
      }
      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.grpc.testing.ClientConfigureRequest.RpcType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>string key = 2 [json_name = "key"];</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        return instance.getKey();
      }
      /**
       * <code>string key = 2 [json_name = "key"];</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return instance.getKeyBytes();
      }
      /**
       * <code>string key = 2 [json_name = "key"];</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <code>string key = 2 [json_name = "key"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }
      /**
       * <code>string key = 2 [json_name = "key"];</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeyBytes(value);
        return this;
      }

      /**
       * <code>string value = 3 [json_name = "value"];</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        return instance.getValue();
      }
      /**
       * <code>string value = 3 [json_name = "value"];</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        return instance.getValueBytes();
      }
      /**
       * <code>string value = 3 [json_name = "value"];</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>string value = 3 [json_name = "value"];</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <code>string value = 3 [json_name = "value"];</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValueBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:grpc.testing.ClientConfigureRequest.Metadata)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.grpc.testing.ClientConfigureRequest.Metadata();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "key_",
              "value_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "\u0003\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.grpc.testing.ClientConfigureRequest.Metadata> parser = PARSER;
          if (parser == null) {
            synchronized (com.grpc.testing.ClientConfigureRequest.Metadata.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.grpc.testing.ClientConfigureRequest.Metadata>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:grpc.testing.ClientConfigureRequest.Metadata)
    private static final com.grpc.testing.ClientConfigureRequest.Metadata DEFAULT_INSTANCE;
    static {
      Metadata defaultInstance = new Metadata();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Metadata.class, defaultInstance);
    }

    public static com.grpc.testing.ClientConfigureRequest.Metadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Metadata> PARSER;

    public static com.google.protobuf.Parser<Metadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int TYPES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.IntList types_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.grpc.testing.ClientConfigureRequest.RpcType> types_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.grpc.testing.ClientConfigureRequest.RpcType>() {
            @java.lang.Override
            public com.grpc.testing.ClientConfigureRequest.RpcType convert(java.lang.Integer from) {
              com.grpc.testing.ClientConfigureRequest.RpcType result = com.grpc.testing.ClientConfigureRequest.RpcType.forNumber(from);
              return result == null ? com.grpc.testing.ClientConfigureRequest.RpcType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @return A list containing the types.
   */
  @java.lang.Override
  public java.util.List<com.grpc.testing.ClientConfigureRequest.RpcType> getTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.grpc.testing.ClientConfigureRequest.RpcType>(types_, types_converter_);
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @return The count of types.
   */
  @java.lang.Override
  public int getTypesCount() {
    return types_.size();
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param index The index of the element to return.
   * @return The types at the given index.
   */
  @java.lang.Override
  public com.grpc.testing.ClientConfigureRequest.RpcType getTypes(int index) {
    com.grpc.testing.ClientConfigureRequest.RpcType result = com.grpc.testing.ClientConfigureRequest.RpcType.forNumber(types_.getInt(index));
    return result == null ? com.grpc.testing.ClientConfigureRequest.RpcType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @return A list containing the enum numeric values on the wire for types.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getTypesValueList() {
    return types_;
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of types at the given index.
   */
  @java.lang.Override
  public int getTypesValue(int index) {
    return types_.getInt(index);
  }
  private int typesMemoizedSerializedSize;
  private void ensureTypesIsMutable() {
    com.google.protobuf.Internal.IntList tmp = types_;
    if (!tmp.isModifiable()) {
      types_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param index The index to set the value at.
   * @param value The types to set.
   */
  private void setTypes(
      int index, com.grpc.testing.ClientConfigureRequest.RpcType value) {
    value.getClass();
  ensureTypesIsMutable();
    types_.setInt(index, value.getNumber());
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param value The types to add.
   */
  private void addTypes(com.grpc.testing.ClientConfigureRequest.RpcType value) {
    value.getClass();
  ensureTypesIsMutable();
    types_.addInt(value.getNumber());
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param values The types to add.
   */
  private void addAllTypes(
      java.lang.Iterable<? extends com.grpc.testing.ClientConfigureRequest.RpcType> values) {
    ensureTypesIsMutable();
    for (com.grpc.testing.ClientConfigureRequest.RpcType value : values) {
      types_.addInt(value.getNumber());
    }
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   */
  private void clearTypes() {
    types_ = emptyIntList();
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param value The enum numeric value on the wire for types to set.
   */
  private void setTypesValue(
      int index, int value) {
    ensureTypesIsMutable();
    types_.setInt(index, value);
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param value The enum numeric value on the wire for types to add.
   */
  private void addTypesValue(int value) {
    ensureTypesIsMutable();
    types_.addInt(value);
  }
  /**
   * <pre>
   * The types of RPCs the client sends.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
   * @param values The enum numeric values on the wire for types to add.
   */
  private void addAllTypesValue(
      java.lang.Iterable<java.lang.Integer> values) {
    ensureTypesIsMutable();
    for (int value : values) {
      types_.addInt(value);
    }
  }

  public static final int METADATA_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.grpc.testing.ClientConfigureRequest.Metadata> metadata_;
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public java.util.List<com.grpc.testing.ClientConfigureRequest.Metadata> getMetadataList() {
    return metadata_;
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  public java.util.List<? extends com.grpc.testing.ClientConfigureRequest.MetadataOrBuilder> 
      getMetadataOrBuilderList() {
    return metadata_;
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public int getMetadataCount() {
    return metadata_.size();
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.ClientConfigureRequest.Metadata getMetadata(int index) {
    return metadata_.get(index);
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  public com.grpc.testing.ClientConfigureRequest.MetadataOrBuilder getMetadataOrBuilder(
      int index) {
    return metadata_.get(index);
  }
  private void ensureMetadataIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.grpc.testing.ClientConfigureRequest.Metadata> tmp = metadata_;
    if (!tmp.isModifiable()) {
      metadata_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  private void setMetadata(
      int index, com.grpc.testing.ClientConfigureRequest.Metadata value) {
    value.getClass();
  ensureMetadataIsMutable();
    metadata_.set(index, value);
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  private void addMetadata(com.grpc.testing.ClientConfigureRequest.Metadata value) {
    value.getClass();
  ensureMetadataIsMutable();
    metadata_.add(value);
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  private void addMetadata(
      int index, com.grpc.testing.ClientConfigureRequest.Metadata value) {
    value.getClass();
  ensureMetadataIsMutable();
    metadata_.add(index, value);
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  private void addAllMetadata(
      java.lang.Iterable<? extends com.grpc.testing.ClientConfigureRequest.Metadata> values) {
    ensureMetadataIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, metadata_);
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  private void clearMetadata() {
    metadata_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The collection of custom metadata to be attached to RPCs sent by the client.
   * </pre>
   *
   * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
   */
  private void removeMetadata(int index) {
    ensureMetadataIsMutable();
    metadata_.remove(index);
  }

  public static final int TIMEOUT_SEC_FIELD_NUMBER = 3;
  private int timeoutSec_;
  /**
   * <pre>
   * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
   * client will use the default from the command-line.
   * </pre>
   *
   * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
   * @return The timeoutSec.
   */
  @java.lang.Override
  public int getTimeoutSec() {
    return timeoutSec_;
  }
  /**
   * <pre>
   * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
   * client will use the default from the command-line.
   * </pre>
   *
   * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
   * @param value The timeoutSec to set.
   */
  private void setTimeoutSec(int value) {
    
    timeoutSec_ = value;
  }
  /**
   * <pre>
   * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
   * client will use the default from the command-line.
   * </pre>
   *
   * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
   */
  private void clearTimeoutSec() {
    
    timeoutSec_ = 0;
  }

  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.ClientConfigureRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.ClientConfigureRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.ClientConfigureRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.grpc.testing.ClientConfigureRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Configurations for a test client.
   * </pre>
   *
   * Protobuf type {@code grpc.testing.ClientConfigureRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.grpc.testing.ClientConfigureRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.ClientConfigureRequest)
      com.grpc.testing.ClientConfigureRequestOrBuilder {
    // Construct using com.grpc.testing.ClientConfigureRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @return A list containing the types.
     */
    @java.lang.Override
    public java.util.List<com.grpc.testing.ClientConfigureRequest.RpcType> getTypesList() {
      return instance.getTypesList();
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @return The count of types.
     */
    @java.lang.Override
    public int getTypesCount() {
      return instance.getTypesCount();
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param index The index of the element to return.
     * @return The types at the given index.
     */
    @java.lang.Override
    public com.grpc.testing.ClientConfigureRequest.RpcType getTypes(int index) {
      return instance.getTypes(index);
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param index The index to set the value at.
     * @param value The types to set.
     * @return This builder for chaining.
     */
    public Builder setTypes(
        int index, com.grpc.testing.ClientConfigureRequest.RpcType value) {
      copyOnWrite();
      instance.setTypes(index, value);
      return this;
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param value The types to add.
     * @return This builder for chaining.
     */
    public Builder addTypes(com.grpc.testing.ClientConfigureRequest.RpcType value) {
      copyOnWrite();
      instance.addTypes(value);
      return this;
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param values The types to add.
     * @return This builder for chaining.
     */
    public Builder addAllTypes(
        java.lang.Iterable<? extends com.grpc.testing.ClientConfigureRequest.RpcType> values) {
      copyOnWrite();
      instance.addAllTypes(values);  return this;
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTypes() {
      copyOnWrite();
      instance.clearTypes();
      return this;
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @return A list containing the enum numeric values on the wire for types.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getTypesValueList() {
      return java.util.Collections.unmodifiableList(
          instance.getTypesValueList());
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of types at the given index.
     */
    @java.lang.Override
    public int getTypesValue(int index) {
      return instance.getTypesValue(index);
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for types to set.
     * @return This builder for chaining.
     */
    public Builder setTypesValue(
        int index, int value) {
      copyOnWrite();
      instance.setTypesValue(index, value);
      return this;
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param value The enum numeric value on the wire for types to add.
     * @return This builder for chaining.
     */
    public Builder addTypesValue(int value) {
      instance.addTypesValue(value);
      return this;
    }
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param values The enum numeric values on the wire for types to add.
     * @return This builder for chaining.
     */
    public Builder addAllTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllTypesValue(values);
      return this;
    }

    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public java.util.List<com.grpc.testing.ClientConfigureRequest.Metadata> getMetadataList() {
      return java.util.Collections.unmodifiableList(
          instance.getMetadataList());
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public int getMetadataCount() {
      return instance.getMetadataCount();
    }/**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public com.grpc.testing.ClientConfigureRequest.Metadata getMetadata(int index) {
      return instance.getMetadata(index);
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder setMetadata(
        int index, com.grpc.testing.ClientConfigureRequest.Metadata value) {
      copyOnWrite();
      instance.setMetadata(index, value);
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder setMetadata(
        int index, com.grpc.testing.ClientConfigureRequest.Metadata.Builder builderForValue) {
      copyOnWrite();
      instance.setMetadata(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder addMetadata(com.grpc.testing.ClientConfigureRequest.Metadata value) {
      copyOnWrite();
      instance.addMetadata(value);
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder addMetadata(
        int index, com.grpc.testing.ClientConfigureRequest.Metadata value) {
      copyOnWrite();
      instance.addMetadata(index, value);
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder addMetadata(
        com.grpc.testing.ClientConfigureRequest.Metadata.Builder builderForValue) {
      copyOnWrite();
      instance.addMetadata(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder addMetadata(
        int index, com.grpc.testing.ClientConfigureRequest.Metadata.Builder builderForValue) {
      copyOnWrite();
      instance.addMetadata(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder addAllMetadata(
        java.lang.Iterable<? extends com.grpc.testing.ClientConfigureRequest.Metadata> values) {
      copyOnWrite();
      instance.addAllMetadata(values);
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder clearMetadata() {
      copyOnWrite();
      instance.clearMetadata();
      return this;
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    public Builder removeMetadata(int index) {
      copyOnWrite();
      instance.removeMetadata(index);
      return this;
    }

    /**
     * <pre>
     * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
     * client will use the default from the command-line.
     * </pre>
     *
     * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
     * @return The timeoutSec.
     */
    @java.lang.Override
    public int getTimeoutSec() {
      return instance.getTimeoutSec();
    }
    /**
     * <pre>
     * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
     * client will use the default from the command-line.
     * </pre>
     *
     * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
     * @param value The timeoutSec to set.
     * @return This builder for chaining.
     */
    public Builder setTimeoutSec(int value) {
      copyOnWrite();
      instance.setTimeoutSec(value);
      return this;
    }
    /**
     * <pre>
     * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
     * client will use the default from the command-line.
     * </pre>
     *
     * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeoutSec() {
      copyOnWrite();
      instance.clearTimeoutSec();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:grpc.testing.ClientConfigureRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.grpc.testing.ClientConfigureRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "types_",
            "metadata_",
            com.grpc.testing.ClientConfigureRequest.Metadata.class,
            "timeoutSec_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0002\u0000\u0001,\u0002\u001b\u0003" +
              "\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.grpc.testing.ClientConfigureRequest> parser = PARSER;
        if (parser == null) {
          synchronized (com.grpc.testing.ClientConfigureRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.grpc.testing.ClientConfigureRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:grpc.testing.ClientConfigureRequest)
  private static final com.grpc.testing.ClientConfigureRequest DEFAULT_INSTANCE;
  static {
    ClientConfigureRequest defaultInstance = new ClientConfigureRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ClientConfigureRequest.class, defaultInstance);
  }

  public static com.grpc.testing.ClientConfigureRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientConfigureRequest> PARSER;

  public static com.google.protobuf.Parser<ClientConfigureRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

