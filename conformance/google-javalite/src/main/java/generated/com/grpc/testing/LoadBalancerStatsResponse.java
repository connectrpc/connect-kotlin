// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

/**
 * Protobuf type {@code grpc.testing.LoadBalancerStatsResponse}
 */
public  final class LoadBalancerStatsResponse extends
    com.google.protobuf.GeneratedMessageLite<
        LoadBalancerStatsResponse, LoadBalancerStatsResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:grpc.testing.LoadBalancerStatsResponse)
    LoadBalancerStatsResponseOrBuilder {
  private LoadBalancerStatsResponse() {
  }
  public interface RpcsByPeerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.testing.LoadBalancerStatsResponse.RpcsByPeer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    int getRpcsByPeerCount();
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    boolean containsRpcsByPeer(
        java.lang.String key);
    /**
     * Use {@link #getRpcsByPeerMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getRpcsByPeer();
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getRpcsByPeerMap();
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */

    int getRpcsByPeerOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */

    int getRpcsByPeerOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code grpc.testing.LoadBalancerStatsResponse.RpcsByPeer}
   */
  public  static final class RpcsByPeer extends
      com.google.protobuf.GeneratedMessageLite<
          RpcsByPeer, RpcsByPeer.Builder> implements
      // @@protoc_insertion_point(message_implements:grpc.testing.LoadBalancerStatsResponse.RpcsByPeer)
      RpcsByPeerOrBuilder {
    private RpcsByPeer() {
    }
    public static final int RPCS_BY_PEER_FIELD_NUMBER = 1;
    private static final class RpcsByPeerDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.Integer> rpcsByPeer_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetRpcsByPeer() {
      return rpcsByPeer_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetMutableRpcsByPeer() {
      if (!rpcsByPeer_.isMutable()) {
        rpcsByPeer_ = rpcsByPeer_.mutableCopy();
      }
      return rpcsByPeer_;
    }
    @java.lang.Override

    public int getRpcsByPeerCount() {
      return internalGetRpcsByPeer().size();
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public boolean containsRpcsByPeer(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return internalGetRpcsByPeer().containsKey(key);
    }
    /**
     * Use {@link #getRpcsByPeerMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeer() {
      return getRpcsByPeerMap();
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeerMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetRpcsByPeer());
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public int getRpcsByPeerOrDefault(
        java.lang.String key,
        int defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetRpcsByPeer();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public int getRpcsByPeerOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetRpcsByPeer();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    private java.util.Map<java.lang.String, java.lang.Integer>
    getMutableRpcsByPeerMap() {
      return internalGetMutableRpcsByPeer();
    }

    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code grpc.testing.LoadBalancerStatsResponse.RpcsByPeer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer, Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.testing.LoadBalancerStatsResponse.RpcsByPeer)
        com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeerOrBuilder {
      // Construct using com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      @java.lang.Override

      public int getRpcsByPeerCount() {
        return instance.getRpcsByPeerMap().size();
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */
      @java.lang.Override

      public boolean containsRpcsByPeer(
          java.lang.String key) {
        java.lang.Class<?> keyClass = key.getClass();
        return instance.getRpcsByPeerMap().containsKey(key);
      }

      public Builder clearRpcsByPeer() {
        copyOnWrite();
        instance.getMutableRpcsByPeerMap().clear();
        return this;
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */

      public Builder removeRpcsByPeer(
          java.lang.String key) {
        java.lang.Class<?> keyClass = key.getClass();
        copyOnWrite();
        instance.getMutableRpcsByPeerMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getRpcsByPeerMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeer() {
        return getRpcsByPeerMap();
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeerMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getRpcsByPeerMap());
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */
      @java.lang.Override

      public int getRpcsByPeerOrDefault(
          java.lang.String key,
          int defaultValue) {
        java.lang.Class<?> keyClass = key.getClass();
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getRpcsByPeerMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */
      @java.lang.Override

      public int getRpcsByPeerOrThrow(
          java.lang.String key) {
        java.lang.Class<?> keyClass = key.getClass();
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getRpcsByPeerMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */
      public Builder putRpcsByPeer(
          java.lang.String key,
          int value) {
        java.lang.Class<?> keyClass = key.getClass();
        
        copyOnWrite();
        instance.getMutableRpcsByPeerMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * The number of completed RPCs for each peer.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
       */
      public Builder putAllRpcsByPeer(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutableRpcsByPeerMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:grpc.testing.LoadBalancerStatsResponse.RpcsByPeer)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "rpcsByPeer_",
              RpcsByPeerDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u00012";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> parser = PARSER;
          if (parser == null) {
            synchronized (com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:grpc.testing.LoadBalancerStatsResponse.RpcsByPeer)
    private static final com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer DEFAULT_INSTANCE;
    static {
      RpcsByPeer defaultInstance = new RpcsByPeer();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RpcsByPeer.class, defaultInstance);
    }

    public static com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RpcsByPeer> PARSER;

    public static com.google.protobuf.Parser<RpcsByPeer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int RPCS_BY_PEER_FIELD_NUMBER = 1;
  private static final class RpcsByPeerDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.Integer> rpcsByPeer_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetRpcsByPeer() {
    return rpcsByPeer_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
  internalGetMutableRpcsByPeer() {
    if (!rpcsByPeer_.isMutable()) {
      rpcsByPeer_ = rpcsByPeer_.mutableCopy();
    }
    return rpcsByPeer_;
  }
  @java.lang.Override

  public int getRpcsByPeerCount() {
    return internalGetRpcsByPeer().size();
  }
  /**
   * <pre>
   * The number of completed RPCs for each peer.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
   */
  @java.lang.Override

  public boolean containsRpcsByPeer(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetRpcsByPeer().containsKey(key);
  }
  /**
   * Use {@link #getRpcsByPeerMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeer() {
    return getRpcsByPeerMap();
  }
  /**
   * <pre>
   * The number of completed RPCs for each peer.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeerMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetRpcsByPeer());
  }
  /**
   * <pre>
   * The number of completed RPCs for each peer.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
   */
  @java.lang.Override

  public int getRpcsByPeerOrDefault(
      java.lang.String key,
      int defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetRpcsByPeer();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The number of completed RPCs for each peer.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
   */
  @java.lang.Override

  public int getRpcsByPeerOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetRpcsByPeer();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The number of completed RPCs for each peer.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
   */
  private java.util.Map<java.lang.String, java.lang.Integer>
  getMutableRpcsByPeerMap() {
    return internalGetMutableRpcsByPeer();
  }

  public static final int NUM_FAILURES_FIELD_NUMBER = 2;
  private int numFailures_;
  /**
   * <pre>
   * The number of RPCs that failed to record a remote peer.
   * </pre>
   *
   * <code>int32 num_failures = 2 [json_name = "numFailures"];</code>
   * @return The numFailures.
   */
  @java.lang.Override
  public int getNumFailures() {
    return numFailures_;
  }
  /**
   * <pre>
   * The number of RPCs that failed to record a remote peer.
   * </pre>
   *
   * <code>int32 num_failures = 2 [json_name = "numFailures"];</code>
   * @param value The numFailures to set.
   */
  private void setNumFailures(int value) {
    
    numFailures_ = value;
  }
  /**
   * <pre>
   * The number of RPCs that failed to record a remote peer.
   * </pre>
   *
   * <code>int32 num_failures = 2 [json_name = "numFailures"];</code>
   */
  private void clearNumFailures() {
    
    numFailures_ = 0;
  }

  public static final int RPCS_BY_METHOD_FIELD_NUMBER = 3;
  private static final class RpcsByMethodDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> rpcsByMethod_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer>
  internalGetRpcsByMethod() {
    return rpcsByMethod_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer>
  internalGetMutableRpcsByMethod() {
    if (!rpcsByMethod_.isMutable()) {
      rpcsByMethod_ = rpcsByMethod_.mutableCopy();
    }
    return rpcsByMethod_;
  }
  @java.lang.Override

  public int getRpcsByMethodCount() {
    return internalGetRpcsByMethod().size();
  }
  /**
   * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
   */
  @java.lang.Override

  public boolean containsRpcsByMethod(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetRpcsByMethod().containsKey(key);
  }
  /**
   * Use {@link #getRpcsByMethodMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> getRpcsByMethod() {
    return getRpcsByMethodMap();
  }
  /**
   * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> getRpcsByMethodMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetRpcsByMethod());
  }
  /**
   * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
   */
  @java.lang.Override

  public com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer getRpcsByMethodOrDefault(
      java.lang.String key,
      com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> map =
        internalGetRpcsByMethod();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
   */
  @java.lang.Override

  public com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer getRpcsByMethodOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> map =
        internalGetRpcsByMethod();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
   */
  private java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer>
  getMutableRpcsByMethodMap() {
    return internalGetMutableRpcsByMethod();
  }

  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.grpc.testing.LoadBalancerStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.grpc.testing.LoadBalancerStatsResponse prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code grpc.testing.LoadBalancerStatsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.grpc.testing.LoadBalancerStatsResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.LoadBalancerStatsResponse)
      com.grpc.testing.LoadBalancerStatsResponseOrBuilder {
    // Construct using com.grpc.testing.LoadBalancerStatsResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override

    public int getRpcsByPeerCount() {
      return instance.getRpcsByPeerMap().size();
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public boolean containsRpcsByPeer(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getRpcsByPeerMap().containsKey(key);
    }

    public Builder clearRpcsByPeer() {
      copyOnWrite();
      instance.getMutableRpcsByPeerMap().clear();
      return this;
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */

    public Builder removeRpcsByPeer(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableRpcsByPeerMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getRpcsByPeerMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeer() {
      return getRpcsByPeerMap();
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getRpcsByPeerMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getRpcsByPeerMap());
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public int getRpcsByPeerOrDefault(
        java.lang.String key,
        int defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getRpcsByPeerMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    @java.lang.Override

    public int getRpcsByPeerOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          instance.getRpcsByPeerMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    public Builder putRpcsByPeer(
        java.lang.String key,
        int value) {
      java.lang.Class<?> keyClass = key.getClass();
      
      copyOnWrite();
      instance.getMutableRpcsByPeerMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The number of completed RPCs for each peer.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; rpcs_by_peer = 1 [json_name = "rpcsByPeer"];</code>
     */
    public Builder putAllRpcsByPeer(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      copyOnWrite();
      instance.getMutableRpcsByPeerMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * The number of RPCs that failed to record a remote peer.
     * </pre>
     *
     * <code>int32 num_failures = 2 [json_name = "numFailures"];</code>
     * @return The numFailures.
     */
    @java.lang.Override
    public int getNumFailures() {
      return instance.getNumFailures();
    }
    /**
     * <pre>
     * The number of RPCs that failed to record a remote peer.
     * </pre>
     *
     * <code>int32 num_failures = 2 [json_name = "numFailures"];</code>
     * @param value The numFailures to set.
     * @return This builder for chaining.
     */
    public Builder setNumFailures(int value) {
      copyOnWrite();
      instance.setNumFailures(value);
      return this;
    }
    /**
     * <pre>
     * The number of RPCs that failed to record a remote peer.
     * </pre>
     *
     * <code>int32 num_failures = 2 [json_name = "numFailures"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumFailures() {
      copyOnWrite();
      instance.clearNumFailures();
      return this;
    }

    @java.lang.Override

    public int getRpcsByMethodCount() {
      return instance.getRpcsByMethodMap().size();
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */
    @java.lang.Override

    public boolean containsRpcsByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getRpcsByMethodMap().containsKey(key);
    }

    public Builder clearRpcsByMethod() {
      copyOnWrite();
      instance.getMutableRpcsByMethodMap().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */

    public Builder removeRpcsByMethod(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableRpcsByMethodMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getRpcsByMethodMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> getRpcsByMethod() {
      return getRpcsByMethodMap();
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> getRpcsByMethodMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getRpcsByMethodMap());
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */
    @java.lang.Override

    public com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer getRpcsByMethodOrDefault(
        java.lang.String key,
        com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> map =
          instance.getRpcsByMethodMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */
    @java.lang.Override

    public com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer getRpcsByMethodOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> map =
          instance.getRpcsByMethodMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */
    public Builder putRpcsByMethod(
        java.lang.String key,
        com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableRpcsByMethodMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .grpc.testing.LoadBalancerStatsResponse.RpcsByPeer&gt; rpcs_by_method = 3 [json_name = "rpcsByMethod"];</code>
     */
    public Builder putAllRpcsByMethod(
        java.util.Map<java.lang.String, com.grpc.testing.LoadBalancerStatsResponse.RpcsByPeer> values) {
      copyOnWrite();
      instance.getMutableRpcsByMethodMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:grpc.testing.LoadBalancerStatsResponse)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.grpc.testing.LoadBalancerStatsResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "rpcsByPeer_",
            RpcsByPeerDefaultEntryHolder.defaultEntry,
            "numFailures_",
            "rpcsByMethod_",
            RpcsByMethodDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0002\u0000\u0000\u00012\u0002\u0004\u0003" +
              "2";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.grpc.testing.LoadBalancerStatsResponse> parser = PARSER;
        if (parser == null) {
          synchronized (com.grpc.testing.LoadBalancerStatsResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.grpc.testing.LoadBalancerStatsResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:grpc.testing.LoadBalancerStatsResponse)
  private static final com.grpc.testing.LoadBalancerStatsResponse DEFAULT_INSTANCE;
  static {
    LoadBalancerStatsResponse defaultInstance = new LoadBalancerStatsResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      LoadBalancerStatsResponse.class, defaultInstance);
  }

  public static com.grpc.testing.LoadBalancerStatsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<LoadBalancerStatsResponse> PARSER;

  public static com.google.protobuf.Parser<LoadBalancerStatsResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

