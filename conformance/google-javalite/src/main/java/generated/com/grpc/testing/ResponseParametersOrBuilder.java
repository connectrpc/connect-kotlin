// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

public interface ResponseParametersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:grpc.testing.ResponseParameters)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Desired payload sizes in responses from the server.
   * </pre>
   *
   * <code>int32 size = 1 [json_name = "size"];</code>
   * @return The size.
   */
  int getSize();

  /**
   * <pre>
   * Desired interval between consecutive responses in the response stream in
   * microseconds.
   * </pre>
   *
   * <code>int32 interval_us = 2 [json_name = "intervalUs"];</code>
   * @return The intervalUs.
   */
  int getIntervalUs();

  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
   * @return Whether the compressed field is set.
   */
  boolean hasCompressed();
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
   * @return The compressed.
   */
  com.grpc.testing.BoolValue getCompressed();
}
