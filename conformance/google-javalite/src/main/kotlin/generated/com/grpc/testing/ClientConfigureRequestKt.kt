// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

@kotlin.jvm.JvmName("-initializeclientConfigureRequest")
public inline fun clientConfigureRequest(block: com.grpc.testing.ClientConfigureRequestKt.Dsl.() -> kotlin.Unit): com.grpc.testing.ClientConfigureRequest =
  com.grpc.testing.ClientConfigureRequestKt.Dsl._create(com.grpc.testing.ClientConfigureRequest.newBuilder()).apply { block() }._build()
public object ClientConfigureRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.grpc.testing.ClientConfigureRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.grpc.testing.ClientConfigureRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.grpc.testing.ClientConfigureRequest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     */
     public val types: com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTypesList()
      )
    /**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param value The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTypes")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>.add(value: com.grpc.testing.ClientConfigureRequest.RpcType) {
      _builder.addTypes(value)
    }/**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param value The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>.plusAssign(value: com.grpc.testing.ClientConfigureRequest.RpcType) {
      add(value)
    }/**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param values The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTypes")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>.addAll(values: kotlin.collections.Iterable<com.grpc.testing.ClientConfigureRequest.RpcType>) {
      _builder.addAllTypes(values)
    }/**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param values The types to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>.plusAssign(values: kotlin.collections.Iterable<com.grpc.testing.ClientConfigureRequest.RpcType>) {
      addAll(values)
    }/**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     * @param index The index to set the value at.
     * @param value The types to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTypes")
    public operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>.set(index: kotlin.Int, value: com.grpc.testing.ClientConfigureRequest.RpcType) {
      _builder.setTypes(index, value)
    }/**
     * <pre>
     * The types of RPCs the client sends.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.RpcType types = 1 [json_name = "types"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTypes")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.RpcType, TypesProxy>.clear() {
      _builder.clearTypes()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetadataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
     public val metadata: com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMetadataList()
      )
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     * @param value The metadata to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMetadata")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>.add(value: com.grpc.testing.ClientConfigureRequest.Metadata) {
      _builder.addMetadata(value)
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     * @param value The metadata to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMetadata")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>.plusAssign(value: com.grpc.testing.ClientConfigureRequest.Metadata) {
      add(value)
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     * @param values The metadata to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMetadata")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>.addAll(values: kotlin.collections.Iterable<com.grpc.testing.ClientConfigureRequest.Metadata>) {
      _builder.addAllMetadata(values)
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     * @param values The metadata to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMetadata")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>.plusAssign(values: kotlin.collections.Iterable<com.grpc.testing.ClientConfigureRequest.Metadata>) {
      addAll(values)
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     * @param index The index to set the value at.
     * @param value The metadata to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMetadata")
    public operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>.set(index: kotlin.Int, value: com.grpc.testing.ClientConfigureRequest.Metadata) {
      _builder.setMetadata(index, value)
    }
    /**
     * <pre>
     * The collection of custom metadata to be attached to RPCs sent by the client.
     * </pre>
     *
     * <code>repeated .grpc.testing.ClientConfigureRequest.Metadata metadata = 2 [json_name = "metadata"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMetadata")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ClientConfigureRequest.Metadata, MetadataProxy>.clear() {
      _builder.clearMetadata()
    }

    /**
     * <pre>
     * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
     * client will use the default from the command-line.
     * </pre>
     *
     * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
     */
    public var timeoutSec: kotlin.Int
      @JvmName("getTimeoutSec")
      get() = _builder.getTimeoutSec()
      @JvmName("setTimeoutSec")
      set(value) {
        _builder.setTimeoutSec(value)
      }
    /**
     * <pre>
     * The deadline to use, in seconds, for all RPCs.  If unset or zero, the
     * client will use the default from the command-line.
     * </pre>
     *
     * <code>int32 timeout_sec = 3 [json_name = "timeoutSec"];</code>
     */
    public fun clearTimeoutSec() {
      _builder.clearTimeoutSec()
    }
  }
  @kotlin.jvm.JvmName("-initializemetadata")
  public inline fun metadata(block: com.grpc.testing.ClientConfigureRequestKt.MetadataKt.Dsl.() -> kotlin.Unit): com.grpc.testing.ClientConfigureRequest.Metadata =
    com.grpc.testing.ClientConfigureRequestKt.MetadataKt.Dsl._create(com.grpc.testing.ClientConfigureRequest.Metadata.newBuilder()).apply { block() }._build()
  public object MetadataKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.grpc.testing.ClientConfigureRequest.Metadata.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.grpc.testing.ClientConfigureRequest.Metadata.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.grpc.testing.ClientConfigureRequest.Metadata = _builder.build()

      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       */
      public var type: com.grpc.testing.ClientConfigureRequest.RpcType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      /**
       * <code>.grpc.testing.ClientConfigureRequest.RpcType type = 1 [json_name = "type"];</code>
       */
      public fun clearType() {
        _builder.clearType()
      }

      /**
       * <code>string key = 2 [json_name = "key"];</code>
       */
      public var key: kotlin.String
        @JvmName("getKey")
        get() = _builder.getKey()
        @JvmName("setKey")
        set(value) {
          _builder.setKey(value)
        }
      /**
       * <code>string key = 2 [json_name = "key"];</code>
       */
      public fun clearKey() {
        _builder.clearKey()
      }

      /**
       * <code>string value = 3 [json_name = "value"];</code>
       */
      public var value: kotlin.String
        @JvmName("getValue")
        get() = _builder.getValue()
        @JvmName("setValue")
        set(value) {
          _builder.setValue(value)
        }
      /**
       * <code>string value = 3 [json_name = "value"];</code>
       */
      public fun clearValue() {
        _builder.clearValue()
      }
    }
  }
}
public inline fun com.grpc.testing.ClientConfigureRequest.copy(block: com.grpc.testing.ClientConfigureRequestKt.Dsl.() -> kotlin.Unit): com.grpc.testing.ClientConfigureRequest =
  com.grpc.testing.ClientConfigureRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun com.grpc.testing.ClientConfigureRequest.Metadata.copy(block: com.grpc.testing.ClientConfigureRequestKt.MetadataKt.Dsl.() -> kotlin.Unit): com.grpc.testing.ClientConfigureRequest.Metadata =
  com.grpc.testing.ClientConfigureRequestKt.MetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

