// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

@kotlin.jvm.JvmName("-initializestreamingOutputCallRequest")
public inline fun streamingOutputCallRequest(block: com.grpc.testing.StreamingOutputCallRequestKt.Dsl.() -> kotlin.Unit): com.grpc.testing.StreamingOutputCallRequest =
  com.grpc.testing.StreamingOutputCallRequestKt.Dsl._create(com.grpc.testing.StreamingOutputCallRequest.newBuilder()).apply { block() }._build()
public object StreamingOutputCallRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.grpc.testing.StreamingOutputCallRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.grpc.testing.StreamingOutputCallRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.grpc.testing.StreamingOutputCallRequest = _builder.build()

    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     */
    public var responseType: com.grpc.testing.PayloadType
      @JvmName("getResponseType")
      get() = _builder.getResponseType()
      @JvmName("setResponseType")
      set(value) {
        _builder.setResponseType(value)
      }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, the payload from each response in the stream
     * might be of different types. This is to simulate a mixed type of payload
     * stream.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     */
    public fun clearResponseType() {
      _builder.clearResponseType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ResponseParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
     public val responseParameters: com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getResponseParametersList()
      )
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     * @param value The responseParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addResponseParameters")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>.add(value: com.grpc.testing.ResponseParameters) {
      _builder.addResponseParameters(value)
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     * @param value The responseParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignResponseParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>.plusAssign(value: com.grpc.testing.ResponseParameters) {
      add(value)
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     * @param values The responseParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllResponseParameters")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>.addAll(values: kotlin.collections.Iterable<com.grpc.testing.ResponseParameters>) {
      _builder.addAllResponseParameters(values)
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     * @param values The responseParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllResponseParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>.plusAssign(values: kotlin.collections.Iterable<com.grpc.testing.ResponseParameters>) {
      addAll(values)
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     * @param index The index to set the value at.
     * @param value The responseParameters to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setResponseParameters")
    public operator fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>.set(index: kotlin.Int, value: com.grpc.testing.ResponseParameters) {
      _builder.setResponseParameters(index, value)
    }
    /**
     * <pre>
     * Configuration for each expected response message.
     * </pre>
     *
     * <code>repeated .grpc.testing.ResponseParameters response_parameters = 2 [json_name = "responseParameters"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearResponseParameters")
    public fun com.google.protobuf.kotlin.DslList<com.grpc.testing.ResponseParameters, ResponseParametersProxy>.clear() {
      _builder.clearResponseParameters()
    }


    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public var payload: com.grpc.testing.Payload
      @JvmName("getPayload")
      get() = _builder.getPayload()
      @JvmName("setPayload")
      set(value) {
        _builder.setPayload(value)
      }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public fun clearPayload() {
      _builder.clearPayload()
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     * @return Whether the payload field is set.
     */
    public fun hasPayload(): kotlin.Boolean {
      return _builder.hasPayload()
    }

    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public var responseStatus: com.grpc.testing.EchoStatus
      @JvmName("getResponseStatus")
      get() = _builder.getResponseStatus()
      @JvmName("setResponseStatus")
      set(value) {
        _builder.setResponseStatus(value)
      }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public fun clearResponseStatus() {
      _builder.clearResponseStatus()
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     * @return Whether the responseStatus field is set.
     */
    public fun hasResponseStatus(): kotlin.Boolean {
      return _builder.hasResponseStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.grpc.testing.StreamingOutputCallRequest.copy(block: com.grpc.testing.StreamingOutputCallRequestKt.Dsl.() -> kotlin.Unit): com.grpc.testing.StreamingOutputCallRequest =
  com.grpc.testing.StreamingOutputCallRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.grpc.testing.StreamingOutputCallRequestOrBuilder.payloadOrNull: com.grpc.testing.Payload?
  get() = if (hasPayload()) getPayload() else null

val com.grpc.testing.StreamingOutputCallRequestOrBuilder.responseStatusOrNull: com.grpc.testing.EchoStatus?
  get() = if (hasResponseStatus()) getResponseStatus() else null

