// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

@kotlin.jvm.JvmName("-initializereconnectInfo")
public inline fun reconnectInfo(block: com.grpc.testing.ReconnectInfoKt.Dsl.() -> kotlin.Unit): com.grpc.testing.ReconnectInfo =
  com.grpc.testing.ReconnectInfoKt.Dsl._create(com.grpc.testing.ReconnectInfo.newBuilder()).apply { block() }._build()
public object ReconnectInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.grpc.testing.ReconnectInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.grpc.testing.ReconnectInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.grpc.testing.ReconnectInfo = _builder.build()

    /**
     * <code>bool passed = 1 [json_name = "passed"];</code>
     */
    public var passed: kotlin.Boolean
      @JvmName("getPassed")
      get() = _builder.getPassed()
      @JvmName("setPassed")
      set(value) {
        _builder.setPassed(value)
      }
    /**
     * <code>bool passed = 1 [json_name = "passed"];</code>
     */
    public fun clearPassed() {
      _builder.clearPassed()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BackoffMsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     */
     public val backoffMs: com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBackoffMsList()
      )
    /**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     * @param value The backoffMs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBackoffMs")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>.add(value: kotlin.Int) {
      _builder.addBackoffMs(value)
    }/**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     * @param value The backoffMs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBackoffMs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     * @param values The backoffMs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBackoffMs")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllBackoffMs(values)
    }/**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     * @param values The backoffMs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBackoffMs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     * @param index The index to set the value at.
     * @param value The backoffMs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBackoffMs")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setBackoffMs(index, value)
    }/**
     * <code>repeated int32 backoff_ms = 2 [json_name = "backoffMs"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBackoffMs")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BackoffMsProxy>.clear() {
      _builder.clearBackoffMs()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun com.grpc.testing.ReconnectInfo.copy(block: com.grpc.testing.ReconnectInfoKt.Dsl.() -> kotlin.Unit): com.grpc.testing.ReconnectInfo =
  com.grpc.testing.ReconnectInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

