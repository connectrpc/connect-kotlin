// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: buf/evilcomments/v1/evilcomments.proto
//
package com.buf.evilcomments.v1

import build.buf.connect.Headers
import build.buf.connect.ResponseMessage
import build.buf.connect.UnaryBlockingCall
import build.buf.connect.http.Cancelable
import kotlin.Unit

public interface EvilCommentsServiceClientInterface {
  /**
   *  This comment contains characters that should be escaped.
   *  &#64; is valid in KDoc, but not in proto.
   *  Comments in KDoc use C-style block comments, so &#42;/ and /&#42; should be escaped.
   *  &#91; and &#93; characters should also be escaped.
   */
  public suspend fun evilComments(request: EvilCommentsRequest, headers: Headers = emptyMap()):
      ResponseMessage<EvilCommentsResponse>

  /**
   *  This comment contains characters that should be escaped.
   *  &#64; is valid in KDoc, but not in proto.
   *  Comments in KDoc use C-style block comments, so &#42;/ and /&#42; should be escaped.
   *  &#91; and &#93; characters should also be escaped.
   */
  public fun evilComments(
    request: EvilCommentsRequest,
    headers: Headers = emptyMap(),
    onResult: (ResponseMessage<EvilCommentsResponse>) -> Unit,
  ): Cancelable

  /**
   *  This comment contains characters that should be escaped.
   *  &#64; is valid in KDoc, but not in proto.
   *  Comments in KDoc use C-style block comments, so &#42;/ and /&#42; should be escaped.
   *  &#91; and &#93; characters should also be escaped.
   */
  public fun evilCommentsBlocking(request: EvilCommentsRequest, headers: Headers = emptyMap()):
      UnaryBlockingCall<EvilCommentsResponse>
}
