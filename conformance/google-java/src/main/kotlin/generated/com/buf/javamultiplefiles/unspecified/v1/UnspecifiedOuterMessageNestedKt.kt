// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: buf/javamultiplefiles/unspecified/v1/enabled_nested.proto

package com.buf.javamultiplefiles.unspecified.v1;

@kotlin.jvm.JvmName("-initializeunspecifiedOuterMessageNested")
public inline fun unspecifiedOuterMessageNested(block: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.Dsl.() -> kotlin.Unit): com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested =
  com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.Dsl._create(com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.newBuilder()).apply { block() }._build()
public object UnspecifiedOuterMessageNestedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested = _builder.build()
  }
  @kotlin.jvm.JvmName("-initializeinnerMessage")
  public inline fun innerMessage(block: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.InnerMessageKt.Dsl.() -> kotlin.Unit): com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage =
    com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.InnerMessageKt.Dsl._create(com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage.newBuilder()).apply { block() }._build()
  public object InnerMessageKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage = _builder.build()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.copy(block: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.Dsl.() -> kotlin.Unit): com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested =
  com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage.copy(block: com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.InnerMessageKt.Dsl.() -> kotlin.Unit): com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNested.InnerMessage =
  com.buf.javamultiplefiles.unspecified.v1.UnspecifiedOuterMessageNestedKt.InnerMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

