// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/test.proto

package com.grpc.testing;

public final class TestProto {
  private TestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027grpc/testing/test.proto\022\014grpc.testing\032" +
      "\030grpc/testing/empty.proto\032\033grpc/testing/" +
      "messages.proto2\336\007\n\013TestService\0225\n\tEmptyC" +
      "all\022\023.grpc.testing.Empty\032\023.grpc.testing." +
      "Empty\022F\n\tUnaryCall\022\033.grpc.testing.Simple" +
      "Request\032\034.grpc.testing.SimpleResponse\022J\n" +
      "\rFailUnaryCall\022\033.grpc.testing.SimpleRequ" +
      "est\032\034.grpc.testing.SimpleResponse\022T\n\022Cac" +
      "heableUnaryCall\022\033.grpc.testing.SimpleReq" +
      "uest\032\034.grpc.testing.SimpleResponse\"\003\220\002\001\022" +
      "l\n\023StreamingOutputCall\022(.grpc.testing.St" +
      "reamingOutputCallRequest\032).grpc.testing." +
      "StreamingOutputCallResponse0\001\022p\n\027FailStr" +
      "eamingOutputCall\022(.grpc.testing.Streamin" +
      "gOutputCallRequest\032).grpc.testing.Stream" +
      "ingOutputCallResponse0\001\022i\n\022StreamingInpu" +
      "tCall\022\'.grpc.testing.StreamingInputCallR" +
      "equest\032(.grpc.testing.StreamingInputCall" +
      "Response(\001\022i\n\016FullDuplexCall\022(.grpc.test" +
      "ing.StreamingOutputCallRequest\032).grpc.te" +
      "sting.StreamingOutputCallResponse(\0010\001\022i\n" +
      "\016HalfDuplexCall\022(.grpc.testing.Streaming" +
      "OutputCallRequest\032).grpc.testing.Streami" +
      "ngOutputCallResponse(\0010\001\022=\n\021Unimplemente" +
      "dCall\022\023.grpc.testing.Empty\032\023.grpc.testin" +
      "g.Empty\022N\n UnimplementedStreamingOutputC" +
      "all\022\023.grpc.testing.Empty\032\023.grpc.testing." +
      "Empty0\0012\245\001\n\024UnimplementedService\022=\n\021Unim" +
      "plementedCall\022\023.grpc.testing.Empty\032\023.grp" +
      "c.testing.Empty\022N\n UnimplementedStreamin" +
      "gOutputCall\022\023.grpc.testing.Empty\032\023.grpc." +
      "testing.Empty0\0012\211\001\n\020ReconnectService\022;\n\005" +
      "Start\022\035.grpc.testing.ReconnectParams\032\023.g" +
      "rpc.testing.Empty\0228\n\004Stop\022\023.grpc.testing" +
      ".Empty\032\033.grpc.testing.ReconnectInfo2\206\002\n\030" +
      "LoadBalancerStatsService\022c\n\016GetClientSta" +
      "ts\022&.grpc.testing.LoadBalancerStatsReque" +
      "st\032\'.grpc.testing.LoadBalancerStatsRespo" +
      "nse\"\000\022\204\001\n\031GetClientAccumulatedStats\0221.gr" +
      "pc.testing.LoadBalancerAccumulatedStatsR" +
      "equest\0322.grpc.testing.LoadBalancerAccumu" +
      "latedStatsResponse\"\0002\213\001\n\026XdsUpdateHealth" +
      "Service\0226\n\nSetServing\022\023.grpc.testing.Emp" +
      "ty\032\023.grpc.testing.Empty\0229\n\rSetNotServing" +
      "\022\023.grpc.testing.Empty\032\023.grpc.testing.Emp" +
      "ty2{\n\037XdsUpdateClientConfigureService\022X\n" +
      "\tConfigure\022$.grpc.testing.ClientConfigur" +
      "eRequest\032%.grpc.testing.ClientConfigureR" +
      "esponseBn\n\020com.grpc.testingB\tTestProtoP\001" +
      "\242\002\003GTX\252\002\014Grpc.Testing\312\002\014Grpc\\Testing\342\002\030G" +
      "rpc\\Testing\\GPBMetadata\352\002\rGrpc::Testingb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.grpc.testing.EmptyProto.getDescriptor(),
          com.grpc.testing.MessagesProto.getDescriptor(),
        });
    com.grpc.testing.EmptyProto.getDescriptor();
    com.grpc.testing.MessagesProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
