// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

/**
 * <pre>
 * Unary request.
 * </pre>
 *
 * Protobuf type {@code grpc.testing.SimpleRequest}
 */
public final class SimpleRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:grpc.testing.SimpleRequest)
    SimpleRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SimpleRequest.newBuilder() to construct.
  private SimpleRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SimpleRequest() {
    responseType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SimpleRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SimpleRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            responseType_ = rawValue;
            break;
          }
          case 16: {

            responseSize_ = input.readInt32();
            break;
          }
          case 26: {
            com.grpc.testing.Payload.Builder subBuilder = null;
            if (payload_ != null) {
              subBuilder = payload_.toBuilder();
            }
            payload_ = input.readMessage(com.grpc.testing.Payload.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(payload_);
              payload_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            fillUsername_ = input.readBool();
            break;
          }
          case 40: {

            fillOauthScope_ = input.readBool();
            break;
          }
          case 50: {
            com.grpc.testing.BoolValue.Builder subBuilder = null;
            if (responseCompressed_ != null) {
              subBuilder = responseCompressed_.toBuilder();
            }
            responseCompressed_ = input.readMessage(com.grpc.testing.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(responseCompressed_);
              responseCompressed_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.grpc.testing.EchoStatus.Builder subBuilder = null;
            if (responseStatus_ != null) {
              subBuilder = responseStatus_.toBuilder();
            }
            responseStatus_ = input.readMessage(com.grpc.testing.EchoStatus.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(responseStatus_);
              responseStatus_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.grpc.testing.BoolValue.Builder subBuilder = null;
            if (expectCompressed_ != null) {
              subBuilder = expectCompressed_.toBuilder();
            }
            expectCompressed_ = input.readMessage(com.grpc.testing.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expectCompressed_);
              expectCompressed_ = subBuilder.buildPartial();
            }

            break;
          }
          case 72: {

            fillServerId_ = input.readBool();
            break;
          }
          case 80: {

            fillGrpclbRouteType_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.grpc.testing.MessagesProto.internal_static_grpc_testing_SimpleRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.grpc.testing.MessagesProto.internal_static_grpc_testing_SimpleRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.grpc.testing.SimpleRequest.class, com.grpc.testing.SimpleRequest.Builder.class);
  }

  public static final int RESPONSE_TYPE_FIELD_NUMBER = 1;
  private int responseType_;
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, server randomly chooses one from other formats.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   * @return The enum numeric value on the wire for responseType.
   */
  @java.lang.Override public int getResponseTypeValue() {
    return responseType_;
  }
  /**
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, server randomly chooses one from other formats.
   * </pre>
   *
   * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
   * @return The responseType.
   */
  @java.lang.Override public com.grpc.testing.PayloadType getResponseType() {
    @SuppressWarnings("deprecation")
    com.grpc.testing.PayloadType result = com.grpc.testing.PayloadType.valueOf(responseType_);
    return result == null ? com.grpc.testing.PayloadType.UNRECOGNIZED : result;
  }

  public static final int RESPONSE_SIZE_FIELD_NUMBER = 2;
  private int responseSize_;
  /**
   * <pre>
   * Desired payload size in the response from the server.
   * </pre>
   *
   * <code>int32 response_size = 2 [json_name = "responseSize"];</code>
   * @return The responseSize.
   */
  @java.lang.Override
  public int getResponseSize() {
    return responseSize_;
  }

  public static final int PAYLOAD_FIELD_NUMBER = 3;
  private com.grpc.testing.Payload payload_;
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   * @return Whether the payload field is set.
   */
  @java.lang.Override
  public boolean hasPayload() {
    return payload_ != null;
  }
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   * @return The payload.
   */
  @java.lang.Override
  public com.grpc.testing.Payload getPayload() {
    return payload_ == null ? com.grpc.testing.Payload.getDefaultInstance() : payload_;
  }
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.PayloadOrBuilder getPayloadOrBuilder() {
    return getPayload();
  }

  public static final int FILL_USERNAME_FIELD_NUMBER = 4;
  private boolean fillUsername_;
  /**
   * <pre>
   * Whether SimpleResponse should include username.
   * </pre>
   *
   * <code>bool fill_username = 4 [json_name = "fillUsername"];</code>
   * @return The fillUsername.
   */
  @java.lang.Override
  public boolean getFillUsername() {
    return fillUsername_;
  }

  public static final int FILL_OAUTH_SCOPE_FIELD_NUMBER = 5;
  private boolean fillOauthScope_;
  /**
   * <pre>
   * Whether SimpleResponse should include OAuth scope.
   * </pre>
   *
   * <code>bool fill_oauth_scope = 5 [json_name = "fillOauthScope"];</code>
   * @return The fillOauthScope.
   */
  @java.lang.Override
  public boolean getFillOauthScope() {
    return fillOauthScope_;
  }

  public static final int RESPONSE_COMPRESSED_FIELD_NUMBER = 6;
  private com.grpc.testing.BoolValue responseCompressed_;
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
   * @return Whether the responseCompressed field is set.
   */
  @java.lang.Override
  public boolean hasResponseCompressed() {
    return responseCompressed_ != null;
  }
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
   * @return The responseCompressed.
   */
  @java.lang.Override
  public com.grpc.testing.BoolValue getResponseCompressed() {
    return responseCompressed_ == null ? com.grpc.testing.BoolValue.getDefaultInstance() : responseCompressed_;
  }
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.BoolValueOrBuilder getResponseCompressedOrBuilder() {
    return getResponseCompressed();
  }

  public static final int RESPONSE_STATUS_FIELD_NUMBER = 7;
  private com.grpc.testing.EchoStatus responseStatus_;
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   * @return Whether the responseStatus field is set.
   */
  @java.lang.Override
  public boolean hasResponseStatus() {
    return responseStatus_ != null;
  }
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   * @return The responseStatus.
   */
  @java.lang.Override
  public com.grpc.testing.EchoStatus getResponseStatus() {
    return responseStatus_ == null ? com.grpc.testing.EchoStatus.getDefaultInstance() : responseStatus_;
  }
  /**
   * <pre>
   * Whether server should return a given status
   * </pre>
   *
   * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.EchoStatusOrBuilder getResponseStatusOrBuilder() {
    return getResponseStatus();
  }

  public static final int EXPECT_COMPRESSED_FIELD_NUMBER = 8;
  private com.grpc.testing.BoolValue expectCompressed_;
  /**
   * <pre>
   * Whether the server should expect this request to be compressed.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
   * @return Whether the expectCompressed field is set.
   */
  @java.lang.Override
  public boolean hasExpectCompressed() {
    return expectCompressed_ != null;
  }
  /**
   * <pre>
   * Whether the server should expect this request to be compressed.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
   * @return The expectCompressed.
   */
  @java.lang.Override
  public com.grpc.testing.BoolValue getExpectCompressed() {
    return expectCompressed_ == null ? com.grpc.testing.BoolValue.getDefaultInstance() : expectCompressed_;
  }
  /**
   * <pre>
   * Whether the server should expect this request to be compressed.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.BoolValueOrBuilder getExpectCompressedOrBuilder() {
    return getExpectCompressed();
  }

  public static final int FILL_SERVER_ID_FIELD_NUMBER = 9;
  private boolean fillServerId_;
  /**
   * <pre>
   * Whether SimpleResponse should include server_id.
   * </pre>
   *
   * <code>bool fill_server_id = 9 [json_name = "fillServerId"];</code>
   * @return The fillServerId.
   */
  @java.lang.Override
  public boolean getFillServerId() {
    return fillServerId_;
  }

  public static final int FILL_GRPCLB_ROUTE_TYPE_FIELD_NUMBER = 10;
  private boolean fillGrpclbRouteType_;
  /**
   * <pre>
   * Whether SimpleResponse should include grpclb_route_type.
   * </pre>
   *
   * <code>bool fill_grpclb_route_type = 10 [json_name = "fillGrpclbRouteType"];</code>
   * @return The fillGrpclbRouteType.
   */
  @java.lang.Override
  public boolean getFillGrpclbRouteType() {
    return fillGrpclbRouteType_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (responseType_ != com.grpc.testing.PayloadType.COMPRESSABLE.getNumber()) {
      output.writeEnum(1, responseType_);
    }
    if (responseSize_ != 0) {
      output.writeInt32(2, responseSize_);
    }
    if (payload_ != null) {
      output.writeMessage(3, getPayload());
    }
    if (fillUsername_ != false) {
      output.writeBool(4, fillUsername_);
    }
    if (fillOauthScope_ != false) {
      output.writeBool(5, fillOauthScope_);
    }
    if (responseCompressed_ != null) {
      output.writeMessage(6, getResponseCompressed());
    }
    if (responseStatus_ != null) {
      output.writeMessage(7, getResponseStatus());
    }
    if (expectCompressed_ != null) {
      output.writeMessage(8, getExpectCompressed());
    }
    if (fillServerId_ != false) {
      output.writeBool(9, fillServerId_);
    }
    if (fillGrpclbRouteType_ != false) {
      output.writeBool(10, fillGrpclbRouteType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (responseType_ != com.grpc.testing.PayloadType.COMPRESSABLE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, responseType_);
    }
    if (responseSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, responseSize_);
    }
    if (payload_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPayload());
    }
    if (fillUsername_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, fillUsername_);
    }
    if (fillOauthScope_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, fillOauthScope_);
    }
    if (responseCompressed_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getResponseCompressed());
    }
    if (responseStatus_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getResponseStatus());
    }
    if (expectCompressed_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getExpectCompressed());
    }
    if (fillServerId_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, fillServerId_);
    }
    if (fillGrpclbRouteType_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, fillGrpclbRouteType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.grpc.testing.SimpleRequest)) {
      return super.equals(obj);
    }
    com.grpc.testing.SimpleRequest other = (com.grpc.testing.SimpleRequest) obj;

    if (responseType_ != other.responseType_) return false;
    if (getResponseSize()
        != other.getResponseSize()) return false;
    if (hasPayload() != other.hasPayload()) return false;
    if (hasPayload()) {
      if (!getPayload()
          .equals(other.getPayload())) return false;
    }
    if (getFillUsername()
        != other.getFillUsername()) return false;
    if (getFillOauthScope()
        != other.getFillOauthScope()) return false;
    if (hasResponseCompressed() != other.hasResponseCompressed()) return false;
    if (hasResponseCompressed()) {
      if (!getResponseCompressed()
          .equals(other.getResponseCompressed())) return false;
    }
    if (hasResponseStatus() != other.hasResponseStatus()) return false;
    if (hasResponseStatus()) {
      if (!getResponseStatus()
          .equals(other.getResponseStatus())) return false;
    }
    if (hasExpectCompressed() != other.hasExpectCompressed()) return false;
    if (hasExpectCompressed()) {
      if (!getExpectCompressed()
          .equals(other.getExpectCompressed())) return false;
    }
    if (getFillServerId()
        != other.getFillServerId()) return false;
    if (getFillGrpclbRouteType()
        != other.getFillGrpclbRouteType()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RESPONSE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + responseType_;
    hash = (37 * hash) + RESPONSE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getResponseSize();
    if (hasPayload()) {
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
    }
    hash = (37 * hash) + FILL_USERNAME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFillUsername());
    hash = (37 * hash) + FILL_OAUTH_SCOPE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFillOauthScope());
    if (hasResponseCompressed()) {
      hash = (37 * hash) + RESPONSE_COMPRESSED_FIELD_NUMBER;
      hash = (53 * hash) + getResponseCompressed().hashCode();
    }
    if (hasResponseStatus()) {
      hash = (37 * hash) + RESPONSE_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getResponseStatus().hashCode();
    }
    if (hasExpectCompressed()) {
      hash = (37 * hash) + EXPECT_COMPRESSED_FIELD_NUMBER;
      hash = (53 * hash) + getExpectCompressed().hashCode();
    }
    hash = (37 * hash) + FILL_SERVER_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFillServerId());
    hash = (37 * hash) + FILL_GRPCLB_ROUTE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFillGrpclbRouteType());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.grpc.testing.SimpleRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.grpc.testing.SimpleRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.grpc.testing.SimpleRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.grpc.testing.SimpleRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Unary request.
   * </pre>
   *
   * Protobuf type {@code grpc.testing.SimpleRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.SimpleRequest)
      com.grpc.testing.SimpleRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.grpc.testing.MessagesProto.internal_static_grpc_testing_SimpleRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.grpc.testing.MessagesProto.internal_static_grpc_testing_SimpleRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.grpc.testing.SimpleRequest.class, com.grpc.testing.SimpleRequest.Builder.class);
    }

    // Construct using com.grpc.testing.SimpleRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      responseType_ = 0;

      responseSize_ = 0;

      if (payloadBuilder_ == null) {
        payload_ = null;
      } else {
        payload_ = null;
        payloadBuilder_ = null;
      }
      fillUsername_ = false;

      fillOauthScope_ = false;

      if (responseCompressedBuilder_ == null) {
        responseCompressed_ = null;
      } else {
        responseCompressed_ = null;
        responseCompressedBuilder_ = null;
      }
      if (responseStatusBuilder_ == null) {
        responseStatus_ = null;
      } else {
        responseStatus_ = null;
        responseStatusBuilder_ = null;
      }
      if (expectCompressedBuilder_ == null) {
        expectCompressed_ = null;
      } else {
        expectCompressed_ = null;
        expectCompressedBuilder_ = null;
      }
      fillServerId_ = false;

      fillGrpclbRouteType_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.grpc.testing.MessagesProto.internal_static_grpc_testing_SimpleRequest_descriptor;
    }

    @java.lang.Override
    public com.grpc.testing.SimpleRequest getDefaultInstanceForType() {
      return com.grpc.testing.SimpleRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.grpc.testing.SimpleRequest build() {
      com.grpc.testing.SimpleRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.grpc.testing.SimpleRequest buildPartial() {
      com.grpc.testing.SimpleRequest result = new com.grpc.testing.SimpleRequest(this);
      result.responseType_ = responseType_;
      result.responseSize_ = responseSize_;
      if (payloadBuilder_ == null) {
        result.payload_ = payload_;
      } else {
        result.payload_ = payloadBuilder_.build();
      }
      result.fillUsername_ = fillUsername_;
      result.fillOauthScope_ = fillOauthScope_;
      if (responseCompressedBuilder_ == null) {
        result.responseCompressed_ = responseCompressed_;
      } else {
        result.responseCompressed_ = responseCompressedBuilder_.build();
      }
      if (responseStatusBuilder_ == null) {
        result.responseStatus_ = responseStatus_;
      } else {
        result.responseStatus_ = responseStatusBuilder_.build();
      }
      if (expectCompressedBuilder_ == null) {
        result.expectCompressed_ = expectCompressed_;
      } else {
        result.expectCompressed_ = expectCompressedBuilder_.build();
      }
      result.fillServerId_ = fillServerId_;
      result.fillGrpclbRouteType_ = fillGrpclbRouteType_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.grpc.testing.SimpleRequest) {
        return mergeFrom((com.grpc.testing.SimpleRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.grpc.testing.SimpleRequest other) {
      if (other == com.grpc.testing.SimpleRequest.getDefaultInstance()) return this;
      if (other.responseType_ != 0) {
        setResponseTypeValue(other.getResponseTypeValue());
      }
      if (other.getResponseSize() != 0) {
        setResponseSize(other.getResponseSize());
      }
      if (other.hasPayload()) {
        mergePayload(other.getPayload());
      }
      if (other.getFillUsername() != false) {
        setFillUsername(other.getFillUsername());
      }
      if (other.getFillOauthScope() != false) {
        setFillOauthScope(other.getFillOauthScope());
      }
      if (other.hasResponseCompressed()) {
        mergeResponseCompressed(other.getResponseCompressed());
      }
      if (other.hasResponseStatus()) {
        mergeResponseStatus(other.getResponseStatus());
      }
      if (other.hasExpectCompressed()) {
        mergeExpectCompressed(other.getExpectCompressed());
      }
      if (other.getFillServerId() != false) {
        setFillServerId(other.getFillServerId());
      }
      if (other.getFillGrpclbRouteType() != false) {
        setFillGrpclbRouteType(other.getFillGrpclbRouteType());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.grpc.testing.SimpleRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.grpc.testing.SimpleRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int responseType_ = 0;
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @return The enum numeric value on the wire for responseType.
     */
    @java.lang.Override public int getResponseTypeValue() {
      return responseType_;
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @param value The enum numeric value on the wire for responseType to set.
     * @return This builder for chaining.
     */
    public Builder setResponseTypeValue(int value) {
      
      responseType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @return The responseType.
     */
    @java.lang.Override
    public com.grpc.testing.PayloadType getResponseType() {
      @SuppressWarnings("deprecation")
      com.grpc.testing.PayloadType result = com.grpc.testing.PayloadType.valueOf(responseType_);
      return result == null ? com.grpc.testing.PayloadType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @param value The responseType to set.
     * @return This builder for chaining.
     */
    public Builder setResponseType(com.grpc.testing.PayloadType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      responseType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     *
     * <code>.grpc.testing.PayloadType response_type = 1 [json_name = "responseType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearResponseType() {
      
      responseType_ = 0;
      onChanged();
      return this;
    }

    private int responseSize_ ;
    /**
     * <pre>
     * Desired payload size in the response from the server.
     * </pre>
     *
     * <code>int32 response_size = 2 [json_name = "responseSize"];</code>
     * @return The responseSize.
     */
    @java.lang.Override
    public int getResponseSize() {
      return responseSize_;
    }
    /**
     * <pre>
     * Desired payload size in the response from the server.
     * </pre>
     *
     * <code>int32 response_size = 2 [json_name = "responseSize"];</code>
     * @param value The responseSize to set.
     * @return This builder for chaining.
     */
    public Builder setResponseSize(int value) {
      
      responseSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired payload size in the response from the server.
     * </pre>
     *
     * <code>int32 response_size = 2 [json_name = "responseSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearResponseSize() {
      
      responseSize_ = 0;
      onChanged();
      return this;
    }

    private com.grpc.testing.Payload payload_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.Payload, com.grpc.testing.Payload.Builder, com.grpc.testing.PayloadOrBuilder> payloadBuilder_;
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     * @return Whether the payload field is set.
     */
    public boolean hasPayload() {
      return payloadBuilder_ != null || payload_ != null;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     * @return The payload.
     */
    public com.grpc.testing.Payload getPayload() {
      if (payloadBuilder_ == null) {
        return payload_ == null ? com.grpc.testing.Payload.getDefaultInstance() : payload_;
      } else {
        return payloadBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder setPayload(com.grpc.testing.Payload value) {
      if (payloadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        payloadBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder setPayload(
        com.grpc.testing.Payload.Builder builderForValue) {
      if (payloadBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        payloadBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder mergePayload(com.grpc.testing.Payload value) {
      if (payloadBuilder_ == null) {
        if (payload_ != null) {
          payload_ =
            com.grpc.testing.Payload.newBuilder(payload_).mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        payloadBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public Builder clearPayload() {
      if (payloadBuilder_ == null) {
        payload_ = null;
        onChanged();
      } else {
        payload_ = null;
        payloadBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public com.grpc.testing.Payload.Builder getPayloadBuilder() {
      
      onChanged();
      return getPayloadFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    public com.grpc.testing.PayloadOrBuilder getPayloadOrBuilder() {
      if (payloadBuilder_ != null) {
        return payloadBuilder_.getMessageOrBuilder();
      } else {
        return payload_ == null ?
            com.grpc.testing.Payload.getDefaultInstance() : payload_;
      }
    }
    /**
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     *
     * <code>.grpc.testing.Payload payload = 3 [json_name = "payload"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.Payload, com.grpc.testing.Payload.Builder, com.grpc.testing.PayloadOrBuilder> 
        getPayloadFieldBuilder() {
      if (payloadBuilder_ == null) {
        payloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.grpc.testing.Payload, com.grpc.testing.Payload.Builder, com.grpc.testing.PayloadOrBuilder>(
                getPayload(),
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      return payloadBuilder_;
    }

    private boolean fillUsername_ ;
    /**
     * <pre>
     * Whether SimpleResponse should include username.
     * </pre>
     *
     * <code>bool fill_username = 4 [json_name = "fillUsername"];</code>
     * @return The fillUsername.
     */
    @java.lang.Override
    public boolean getFillUsername() {
      return fillUsername_;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include username.
     * </pre>
     *
     * <code>bool fill_username = 4 [json_name = "fillUsername"];</code>
     * @param value The fillUsername to set.
     * @return This builder for chaining.
     */
    public Builder setFillUsername(boolean value) {
      
      fillUsername_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include username.
     * </pre>
     *
     * <code>bool fill_username = 4 [json_name = "fillUsername"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFillUsername() {
      
      fillUsername_ = false;
      onChanged();
      return this;
    }

    private boolean fillOauthScope_ ;
    /**
     * <pre>
     * Whether SimpleResponse should include OAuth scope.
     * </pre>
     *
     * <code>bool fill_oauth_scope = 5 [json_name = "fillOauthScope"];</code>
     * @return The fillOauthScope.
     */
    @java.lang.Override
    public boolean getFillOauthScope() {
      return fillOauthScope_;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include OAuth scope.
     * </pre>
     *
     * <code>bool fill_oauth_scope = 5 [json_name = "fillOauthScope"];</code>
     * @param value The fillOauthScope to set.
     * @return This builder for chaining.
     */
    public Builder setFillOauthScope(boolean value) {
      
      fillOauthScope_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include OAuth scope.
     * </pre>
     *
     * <code>bool fill_oauth_scope = 5 [json_name = "fillOauthScope"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFillOauthScope() {
      
      fillOauthScope_ = false;
      onChanged();
      return this;
    }

    private com.grpc.testing.BoolValue responseCompressed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder> responseCompressedBuilder_;
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     * @return Whether the responseCompressed field is set.
     */
    public boolean hasResponseCompressed() {
      return responseCompressedBuilder_ != null || responseCompressed_ != null;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     * @return The responseCompressed.
     */
    public com.grpc.testing.BoolValue getResponseCompressed() {
      if (responseCompressedBuilder_ == null) {
        return responseCompressed_ == null ? com.grpc.testing.BoolValue.getDefaultInstance() : responseCompressed_;
      } else {
        return responseCompressedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    public Builder setResponseCompressed(com.grpc.testing.BoolValue value) {
      if (responseCompressedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        responseCompressed_ = value;
        onChanged();
      } else {
        responseCompressedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    public Builder setResponseCompressed(
        com.grpc.testing.BoolValue.Builder builderForValue) {
      if (responseCompressedBuilder_ == null) {
        responseCompressed_ = builderForValue.build();
        onChanged();
      } else {
        responseCompressedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    public Builder mergeResponseCompressed(com.grpc.testing.BoolValue value) {
      if (responseCompressedBuilder_ == null) {
        if (responseCompressed_ != null) {
          responseCompressed_ =
            com.grpc.testing.BoolValue.newBuilder(responseCompressed_).mergeFrom(value).buildPartial();
        } else {
          responseCompressed_ = value;
        }
        onChanged();
      } else {
        responseCompressedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    public Builder clearResponseCompressed() {
      if (responseCompressedBuilder_ == null) {
        responseCompressed_ = null;
        onChanged();
      } else {
        responseCompressed_ = null;
        responseCompressedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    public com.grpc.testing.BoolValue.Builder getResponseCompressedBuilder() {
      
      onChanged();
      return getResponseCompressedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    public com.grpc.testing.BoolValueOrBuilder getResponseCompressedOrBuilder() {
      if (responseCompressedBuilder_ != null) {
        return responseCompressedBuilder_.getMessageOrBuilder();
      } else {
        return responseCompressed_ == null ?
            com.grpc.testing.BoolValue.getDefaultInstance() : responseCompressed_;
      }
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue response_compressed = 6 [json_name = "responseCompressed"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder> 
        getResponseCompressedFieldBuilder() {
      if (responseCompressedBuilder_ == null) {
        responseCompressedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder>(
                getResponseCompressed(),
                getParentForChildren(),
                isClean());
        responseCompressed_ = null;
      }
      return responseCompressedBuilder_;
    }

    private com.grpc.testing.EchoStatus responseStatus_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.EchoStatus, com.grpc.testing.EchoStatus.Builder, com.grpc.testing.EchoStatusOrBuilder> responseStatusBuilder_;
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     * @return Whether the responseStatus field is set.
     */
    public boolean hasResponseStatus() {
      return responseStatusBuilder_ != null || responseStatus_ != null;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     * @return The responseStatus.
     */
    public com.grpc.testing.EchoStatus getResponseStatus() {
      if (responseStatusBuilder_ == null) {
        return responseStatus_ == null ? com.grpc.testing.EchoStatus.getDefaultInstance() : responseStatus_;
      } else {
        return responseStatusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder setResponseStatus(com.grpc.testing.EchoStatus value) {
      if (responseStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        responseStatus_ = value;
        onChanged();
      } else {
        responseStatusBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder setResponseStatus(
        com.grpc.testing.EchoStatus.Builder builderForValue) {
      if (responseStatusBuilder_ == null) {
        responseStatus_ = builderForValue.build();
        onChanged();
      } else {
        responseStatusBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder mergeResponseStatus(com.grpc.testing.EchoStatus value) {
      if (responseStatusBuilder_ == null) {
        if (responseStatus_ != null) {
          responseStatus_ =
            com.grpc.testing.EchoStatus.newBuilder(responseStatus_).mergeFrom(value).buildPartial();
        } else {
          responseStatus_ = value;
        }
        onChanged();
      } else {
        responseStatusBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public Builder clearResponseStatus() {
      if (responseStatusBuilder_ == null) {
        responseStatus_ = null;
        onChanged();
      } else {
        responseStatus_ = null;
        responseStatusBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public com.grpc.testing.EchoStatus.Builder getResponseStatusBuilder() {
      
      onChanged();
      return getResponseStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    public com.grpc.testing.EchoStatusOrBuilder getResponseStatusOrBuilder() {
      if (responseStatusBuilder_ != null) {
        return responseStatusBuilder_.getMessageOrBuilder();
      } else {
        return responseStatus_ == null ?
            com.grpc.testing.EchoStatus.getDefaultInstance() : responseStatus_;
      }
    }
    /**
     * <pre>
     * Whether server should return a given status
     * </pre>
     *
     * <code>.grpc.testing.EchoStatus response_status = 7 [json_name = "responseStatus"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.EchoStatus, com.grpc.testing.EchoStatus.Builder, com.grpc.testing.EchoStatusOrBuilder> 
        getResponseStatusFieldBuilder() {
      if (responseStatusBuilder_ == null) {
        responseStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.grpc.testing.EchoStatus, com.grpc.testing.EchoStatus.Builder, com.grpc.testing.EchoStatusOrBuilder>(
                getResponseStatus(),
                getParentForChildren(),
                isClean());
        responseStatus_ = null;
      }
      return responseStatusBuilder_;
    }

    private com.grpc.testing.BoolValue expectCompressed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder> expectCompressedBuilder_;
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     * @return Whether the expectCompressed field is set.
     */
    public boolean hasExpectCompressed() {
      return expectCompressedBuilder_ != null || expectCompressed_ != null;
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     * @return The expectCompressed.
     */
    public com.grpc.testing.BoolValue getExpectCompressed() {
      if (expectCompressedBuilder_ == null) {
        return expectCompressed_ == null ? com.grpc.testing.BoolValue.getDefaultInstance() : expectCompressed_;
      } else {
        return expectCompressedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    public Builder setExpectCompressed(com.grpc.testing.BoolValue value) {
      if (expectCompressedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expectCompressed_ = value;
        onChanged();
      } else {
        expectCompressedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    public Builder setExpectCompressed(
        com.grpc.testing.BoolValue.Builder builderForValue) {
      if (expectCompressedBuilder_ == null) {
        expectCompressed_ = builderForValue.build();
        onChanged();
      } else {
        expectCompressedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    public Builder mergeExpectCompressed(com.grpc.testing.BoolValue value) {
      if (expectCompressedBuilder_ == null) {
        if (expectCompressed_ != null) {
          expectCompressed_ =
            com.grpc.testing.BoolValue.newBuilder(expectCompressed_).mergeFrom(value).buildPartial();
        } else {
          expectCompressed_ = value;
        }
        onChanged();
      } else {
        expectCompressedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    public Builder clearExpectCompressed() {
      if (expectCompressedBuilder_ == null) {
        expectCompressed_ = null;
        onChanged();
      } else {
        expectCompressed_ = null;
        expectCompressedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    public com.grpc.testing.BoolValue.Builder getExpectCompressedBuilder() {
      
      onChanged();
      return getExpectCompressedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    public com.grpc.testing.BoolValueOrBuilder getExpectCompressedOrBuilder() {
      if (expectCompressedBuilder_ != null) {
        return expectCompressedBuilder_.getMessageOrBuilder();
      } else {
        return expectCompressed_ == null ?
            com.grpc.testing.BoolValue.getDefaultInstance() : expectCompressed_;
      }
    }
    /**
     * <pre>
     * Whether the server should expect this request to be compressed.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue expect_compressed = 8 [json_name = "expectCompressed"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder> 
        getExpectCompressedFieldBuilder() {
      if (expectCompressedBuilder_ == null) {
        expectCompressedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder>(
                getExpectCompressed(),
                getParentForChildren(),
                isClean());
        expectCompressed_ = null;
      }
      return expectCompressedBuilder_;
    }

    private boolean fillServerId_ ;
    /**
     * <pre>
     * Whether SimpleResponse should include server_id.
     * </pre>
     *
     * <code>bool fill_server_id = 9 [json_name = "fillServerId"];</code>
     * @return The fillServerId.
     */
    @java.lang.Override
    public boolean getFillServerId() {
      return fillServerId_;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include server_id.
     * </pre>
     *
     * <code>bool fill_server_id = 9 [json_name = "fillServerId"];</code>
     * @param value The fillServerId to set.
     * @return This builder for chaining.
     */
    public Builder setFillServerId(boolean value) {
      
      fillServerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include server_id.
     * </pre>
     *
     * <code>bool fill_server_id = 9 [json_name = "fillServerId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFillServerId() {
      
      fillServerId_ = false;
      onChanged();
      return this;
    }

    private boolean fillGrpclbRouteType_ ;
    /**
     * <pre>
     * Whether SimpleResponse should include grpclb_route_type.
     * </pre>
     *
     * <code>bool fill_grpclb_route_type = 10 [json_name = "fillGrpclbRouteType"];</code>
     * @return The fillGrpclbRouteType.
     */
    @java.lang.Override
    public boolean getFillGrpclbRouteType() {
      return fillGrpclbRouteType_;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include grpclb_route_type.
     * </pre>
     *
     * <code>bool fill_grpclb_route_type = 10 [json_name = "fillGrpclbRouteType"];</code>
     * @param value The fillGrpclbRouteType to set.
     * @return This builder for chaining.
     */
    public Builder setFillGrpclbRouteType(boolean value) {
      
      fillGrpclbRouteType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether SimpleResponse should include grpclb_route_type.
     * </pre>
     *
     * <code>bool fill_grpclb_route_type = 10 [json_name = "fillGrpclbRouteType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFillGrpclbRouteType() {
      
      fillGrpclbRouteType_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:grpc.testing.SimpleRequest)
  }

  // @@protoc_insertion_point(class_scope:grpc.testing.SimpleRequest)
  private static final com.grpc.testing.SimpleRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.grpc.testing.SimpleRequest();
  }

  public static com.grpc.testing.SimpleRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SimpleRequest>
      PARSER = new com.google.protobuf.AbstractParser<SimpleRequest>() {
    @java.lang.Override
    public SimpleRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SimpleRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SimpleRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SimpleRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.grpc.testing.SimpleRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

