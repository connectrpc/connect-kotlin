// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

public interface StreamingInputCallRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:grpc.testing.StreamingInputCallRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 1 [json_name = "payload"];</code>
   * @return Whether the payload field is set.
   */
  boolean hasPayload();
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 1 [json_name = "payload"];</code>
   * @return The payload.
   */
  com.grpc.testing.Payload getPayload();
  /**
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   *
   * <code>.grpc.testing.Payload payload = 1 [json_name = "payload"];</code>
   */
  com.grpc.testing.PayloadOrBuilder getPayloadOrBuilder();

  /**
   * <pre>
   * Whether the server should expect this request to be compressed. This field
   * is "nullable" in order to interoperate seamlessly with servers not able to
   * implement the full compression tests by introspecting the call to verify
   * the request's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue expect_compressed = 2 [json_name = "expectCompressed"];</code>
   * @return Whether the expectCompressed field is set.
   */
  boolean hasExpectCompressed();
  /**
   * <pre>
   * Whether the server should expect this request to be compressed. This field
   * is "nullable" in order to interoperate seamlessly with servers not able to
   * implement the full compression tests by introspecting the call to verify
   * the request's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue expect_compressed = 2 [json_name = "expectCompressed"];</code>
   * @return The expectCompressed.
   */
  com.grpc.testing.BoolValue getExpectCompressed();
  /**
   * <pre>
   * Whether the server should expect this request to be compressed. This field
   * is "nullable" in order to interoperate seamlessly with servers not able to
   * implement the full compression tests by introspecting the call to verify
   * the request's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue expect_compressed = 2 [json_name = "expectCompressed"];</code>
   */
  com.grpc.testing.BoolValueOrBuilder getExpectCompressedOrBuilder();
}
