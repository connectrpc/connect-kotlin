// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/messages.proto

package com.grpc.testing;

/**
 * <pre>
 * Configuration for a particular response.
 * </pre>
 *
 * Protobuf type {@code grpc.testing.ResponseParameters}
 */
public final class ResponseParameters extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:grpc.testing.ResponseParameters)
    ResponseParametersOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResponseParameters.newBuilder() to construct.
  private ResponseParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResponseParameters() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ResponseParameters();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ResponseParameters(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            size_ = input.readInt32();
            break;
          }
          case 16: {

            intervalUs_ = input.readInt32();
            break;
          }
          case 26: {
            com.grpc.testing.BoolValue.Builder subBuilder = null;
            if (compressed_ != null) {
              subBuilder = compressed_.toBuilder();
            }
            compressed_ = input.readMessage(com.grpc.testing.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(compressed_);
              compressed_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.grpc.testing.MessagesProto.internal_static_grpc_testing_ResponseParameters_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.grpc.testing.MessagesProto.internal_static_grpc_testing_ResponseParameters_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.grpc.testing.ResponseParameters.class, com.grpc.testing.ResponseParameters.Builder.class);
  }

  public static final int SIZE_FIELD_NUMBER = 1;
  private int size_;
  /**
   * <pre>
   * Desired payload sizes in responses from the server.
   * </pre>
   *
   * <code>int32 size = 1 [json_name = "size"];</code>
   * @return The size.
   */
  @java.lang.Override
  public int getSize() {
    return size_;
  }

  public static final int INTERVAL_US_FIELD_NUMBER = 2;
  private int intervalUs_;
  /**
   * <pre>
   * Desired interval between consecutive responses in the response stream in
   * microseconds.
   * </pre>
   *
   * <code>int32 interval_us = 2 [json_name = "intervalUs"];</code>
   * @return The intervalUs.
   */
  @java.lang.Override
  public int getIntervalUs() {
    return intervalUs_;
  }

  public static final int COMPRESSED_FIELD_NUMBER = 3;
  private com.grpc.testing.BoolValue compressed_;
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
   * @return Whether the compressed field is set.
   */
  @java.lang.Override
  public boolean hasCompressed() {
    return compressed_ != null;
  }
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
   * @return The compressed.
   */
  @java.lang.Override
  public com.grpc.testing.BoolValue getCompressed() {
    return compressed_ == null ? com.grpc.testing.BoolValue.getDefaultInstance() : compressed_;
  }
  /**
   * <pre>
   * Whether to request the server to compress the response. This field is
   * "nullable" in order to interoperate seamlessly with clients not able to
   * implement the full compression tests by introspecting the call to verify
   * the response's compression status.
   * </pre>
   *
   * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
   */
  @java.lang.Override
  public com.grpc.testing.BoolValueOrBuilder getCompressedOrBuilder() {
    return getCompressed();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (size_ != 0) {
      output.writeInt32(1, size_);
    }
    if (intervalUs_ != 0) {
      output.writeInt32(2, intervalUs_);
    }
    if (compressed_ != null) {
      output.writeMessage(3, getCompressed());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (size_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, size_);
    }
    if (intervalUs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, intervalUs_);
    }
    if (compressed_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCompressed());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.grpc.testing.ResponseParameters)) {
      return super.equals(obj);
    }
    com.grpc.testing.ResponseParameters other = (com.grpc.testing.ResponseParameters) obj;

    if (getSize()
        != other.getSize()) return false;
    if (getIntervalUs()
        != other.getIntervalUs()) return false;
    if (hasCompressed() != other.hasCompressed()) return false;
    if (hasCompressed()) {
      if (!getCompressed()
          .equals(other.getCompressed())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getSize();
    hash = (37 * hash) + INTERVAL_US_FIELD_NUMBER;
    hash = (53 * hash) + getIntervalUs();
    if (hasCompressed()) {
      hash = (37 * hash) + COMPRESSED_FIELD_NUMBER;
      hash = (53 * hash) + getCompressed().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.grpc.testing.ResponseParameters parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.grpc.testing.ResponseParameters parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.grpc.testing.ResponseParameters parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.grpc.testing.ResponseParameters parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.grpc.testing.ResponseParameters prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for a particular response.
   * </pre>
   *
   * Protobuf type {@code grpc.testing.ResponseParameters}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.ResponseParameters)
      com.grpc.testing.ResponseParametersOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.grpc.testing.MessagesProto.internal_static_grpc_testing_ResponseParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.grpc.testing.MessagesProto.internal_static_grpc_testing_ResponseParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.grpc.testing.ResponseParameters.class, com.grpc.testing.ResponseParameters.Builder.class);
    }

    // Construct using com.grpc.testing.ResponseParameters.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      size_ = 0;

      intervalUs_ = 0;

      if (compressedBuilder_ == null) {
        compressed_ = null;
      } else {
        compressed_ = null;
        compressedBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.grpc.testing.MessagesProto.internal_static_grpc_testing_ResponseParameters_descriptor;
    }

    @java.lang.Override
    public com.grpc.testing.ResponseParameters getDefaultInstanceForType() {
      return com.grpc.testing.ResponseParameters.getDefaultInstance();
    }

    @java.lang.Override
    public com.grpc.testing.ResponseParameters build() {
      com.grpc.testing.ResponseParameters result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.grpc.testing.ResponseParameters buildPartial() {
      com.grpc.testing.ResponseParameters result = new com.grpc.testing.ResponseParameters(this);
      result.size_ = size_;
      result.intervalUs_ = intervalUs_;
      if (compressedBuilder_ == null) {
        result.compressed_ = compressed_;
      } else {
        result.compressed_ = compressedBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.grpc.testing.ResponseParameters) {
        return mergeFrom((com.grpc.testing.ResponseParameters)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.grpc.testing.ResponseParameters other) {
      if (other == com.grpc.testing.ResponseParameters.getDefaultInstance()) return this;
      if (other.getSize() != 0) {
        setSize(other.getSize());
      }
      if (other.getIntervalUs() != 0) {
        setIntervalUs(other.getIntervalUs());
      }
      if (other.hasCompressed()) {
        mergeCompressed(other.getCompressed());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.grpc.testing.ResponseParameters parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.grpc.testing.ResponseParameters) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int size_ ;
    /**
     * <pre>
     * Desired payload sizes in responses from the server.
     * </pre>
     *
     * <code>int32 size = 1 [json_name = "size"];</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }
    /**
     * <pre>
     * Desired payload sizes in responses from the server.
     * </pre>
     *
     * <code>int32 size = 1 [json_name = "size"];</code>
     * @param value The size to set.
     * @return This builder for chaining.
     */
    public Builder setSize(int value) {
      
      size_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired payload sizes in responses from the server.
     * </pre>
     *
     * <code>int32 size = 1 [json_name = "size"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSize() {
      
      size_ = 0;
      onChanged();
      return this;
    }

    private int intervalUs_ ;
    /**
     * <pre>
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     * </pre>
     *
     * <code>int32 interval_us = 2 [json_name = "intervalUs"];</code>
     * @return The intervalUs.
     */
    @java.lang.Override
    public int getIntervalUs() {
      return intervalUs_;
    }
    /**
     * <pre>
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     * </pre>
     *
     * <code>int32 interval_us = 2 [json_name = "intervalUs"];</code>
     * @param value The intervalUs to set.
     * @return This builder for chaining.
     */
    public Builder setIntervalUs(int value) {
      
      intervalUs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     * </pre>
     *
     * <code>int32 interval_us = 2 [json_name = "intervalUs"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIntervalUs() {
      
      intervalUs_ = 0;
      onChanged();
      return this;
    }

    private com.grpc.testing.BoolValue compressed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder> compressedBuilder_;
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     * @return Whether the compressed field is set.
     */
    public boolean hasCompressed() {
      return compressedBuilder_ != null || compressed_ != null;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     * @return The compressed.
     */
    public com.grpc.testing.BoolValue getCompressed() {
      if (compressedBuilder_ == null) {
        return compressed_ == null ? com.grpc.testing.BoolValue.getDefaultInstance() : compressed_;
      } else {
        return compressedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    public Builder setCompressed(com.grpc.testing.BoolValue value) {
      if (compressedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        compressed_ = value;
        onChanged();
      } else {
        compressedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    public Builder setCompressed(
        com.grpc.testing.BoolValue.Builder builderForValue) {
      if (compressedBuilder_ == null) {
        compressed_ = builderForValue.build();
        onChanged();
      } else {
        compressedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    public Builder mergeCompressed(com.grpc.testing.BoolValue value) {
      if (compressedBuilder_ == null) {
        if (compressed_ != null) {
          compressed_ =
            com.grpc.testing.BoolValue.newBuilder(compressed_).mergeFrom(value).buildPartial();
        } else {
          compressed_ = value;
        }
        onChanged();
      } else {
        compressedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    public Builder clearCompressed() {
      if (compressedBuilder_ == null) {
        compressed_ = null;
        onChanged();
      } else {
        compressed_ = null;
        compressedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    public com.grpc.testing.BoolValue.Builder getCompressedBuilder() {
      
      onChanged();
      return getCompressedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    public com.grpc.testing.BoolValueOrBuilder getCompressedOrBuilder() {
      if (compressedBuilder_ != null) {
        return compressedBuilder_.getMessageOrBuilder();
      } else {
        return compressed_ == null ?
            com.grpc.testing.BoolValue.getDefaultInstance() : compressed_;
      }
    }
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3 [json_name = "compressed"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder> 
        getCompressedFieldBuilder() {
      if (compressedBuilder_ == null) {
        compressedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.grpc.testing.BoolValue, com.grpc.testing.BoolValue.Builder, com.grpc.testing.BoolValueOrBuilder>(
                getCompressed(),
                getParentForChildren(),
                isClean());
        compressed_ = null;
      }
      return compressedBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:grpc.testing.ResponseParameters)
  }

  // @@protoc_insertion_point(class_scope:grpc.testing.ResponseParameters)
  private static final com.grpc.testing.ResponseParameters DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.grpc.testing.ResponseParameters();
  }

  public static com.grpc.testing.ResponseParameters getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResponseParameters>
      PARSER = new com.google.protobuf.AbstractParser<ResponseParameters>() {
    @java.lang.Override
    public ResponseParameters parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ResponseParameters(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResponseParameters> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResponseParameters> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.grpc.testing.ResponseParameters getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

