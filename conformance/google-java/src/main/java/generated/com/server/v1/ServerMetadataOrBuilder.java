// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/v1/server.proto

package com.server.v1;

public interface ServerMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:server.v1.ServerMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string host = 1 [json_name = "host"];</code>
   * @return The host.
   */
  java.lang.String getHost();
  /**
   * <code>string host = 1 [json_name = "host"];</code>
   * @return The bytes for host.
   */
  com.google.protobuf.ByteString
      getHostBytes();

  /**
   * <code>repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];</code>
   */
  java.util.List<com.server.v1.ProtocolSupport> 
      getProtocolsList();
  /**
   * <code>repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];</code>
   */
  com.server.v1.ProtocolSupport getProtocols(int index);
  /**
   * <code>repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];</code>
   */
  int getProtocolsCount();
  /**
   * <code>repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];</code>
   */
  java.util.List<? extends com.server.v1.ProtocolSupportOrBuilder> 
      getProtocolsOrBuilderList();
  /**
   * <code>repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];</code>
   */
  com.server.v1.ProtocolSupportOrBuilder getProtocolsOrBuilder(
      int index);
}
